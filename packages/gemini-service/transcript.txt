WEBVTT

1
00:00:00.750 --> 00:00:03.510
Hola muy buenas y bienvenidos a square.

2
00:00:04.490 --> 00:00:06.990
Hoy vamos a comenzar el curso de iniciar la

3
00:00:06.990 --> 00:00:08.790
programación con javascript.

4
00:00:09.210 --> 00:00:12.550
Es un curso express que comienza con una clase de hoy

5
00:00:13.250 --> 00:00:14.870
que en la cual vamos a ver

6
00:00:15.560 --> 00:00:19.800
temas como los siguientes aplicaciones javascript, luego

7
00:00:20.430 --> 00:00:22.720
plataformas de ejecución de javascript,

8
00:00:22.720 --> 00:00:24.520
tanto el navegador como la plataforma.

9
00:00:24.520 --> 00:00:27.320
No uys esto toda. Voy a explicar muy, muy rápidamente.

10
00:00:27.320 --> 00:00:29.720
Y luego vamos a pasar a p js, que es un framework

11
00:00:30.270 --> 00:00:33.120
para aprender a programar de una manera muy,

12
00:00:33.120 --> 00:00:36.120
muy amena que vais a poder conocer en el día de hoy.

13
00:00:36.760 --> 00:00:38.990
Y vamos a empezar a dar los primeros pasos con este

14
00:00:38.990 --> 00:00:42.470
framework haciendo algunos ejemplos que espero que resulten

15
00:00:42.560 --> 00:00:43.790
atractivos para vosotros.

16
00:00:44.370 --> 00:00:46.550
Me presento, yo soy Miguel Miguel Angel Alvarez.

17
00:00:46.870 --> 00:00:50.390
Y bueno, soy el fundador de desarrollo web com cofundador de

18
00:00:50.390 --> 00:00:53.470
escuela y t, y por ahí están mis datos de contacto para eis.

19
00:00:54.030 --> 00:00:56.550
Y bueno, pues vamos a comenzar primero

20
00:00:58.010 --> 00:01:00.190
que nos iba la introducción para el curso decir,

21
00:01:00.550 --> 00:01:02.150
y para lo que es el lenguaje de javascript,

22
00:01:02.480 --> 00:01:04.670
decir que javascript es un lenguaje de probación muy

23
00:01:04.700 --> 00:01:08.390
versátil porque con él podemos hacer una gama de operaciones

24
00:01:08.450 --> 00:01:09.790
que yo creo que es,

25
00:01:10.770 --> 00:01:13.270
es la más completa que existe el mundo porque no hay ningún

26
00:01:13.430 --> 00:01:15.670
lenguaje de programación que ocupe tantos espacios

27
00:01:15.670 --> 00:01:16.870
como ocupa javascript.

28
00:01:17.470 --> 00:01:18.750
Y cuáles son estos espacios?

29
00:01:18.750 --> 00:01:20.710
Pues, bueno, primero las aplicaciones web,

30
00:01:20.940 --> 00:01:22.270
pero las aplicaciones web,

31
00:01:22.330 --> 00:01:23.830
me refiero a las aplicaciones que

32
00:01:23.830 --> 00:01:24.990
están dentro del navegador.

33
00:01:25.030 --> 00:01:27.550
Y esto está muy bien porque javascript es el único

34
00:01:27.750 --> 00:01:28.830
lenguaje que soportan.

35
00:01:29.080 --> 00:01:30.590
Bueno, a día de hoy,

36
00:01:30.590 --> 00:01:33.070
la verdad es que los navegadores se han evolucionado mucho.

37
00:01:33.170 --> 00:01:36.830
Ya hay plataformas de ejecución dentro de los navegadores

38
00:01:36.830 --> 00:01:41.310
que te soportan hasta lenguajes como c o cosas de todo tipo.

39
00:01:41.940 --> 00:01:42.950
Pero bueno,

40
00:01:43.170 --> 00:01:46.070
tradicionalmente el lenguaje con el cual manipulamos una

41
00:01:46.070 --> 00:01:47.670
página web es javascript.

42
00:01:47.780 --> 00:01:49.790
Así que sería esta

43
00:01:50.540 --> 00:01:53.390
aplicación única para el lenguaje javascript.

44
00:01:53.560 --> 00:01:56.070
Luego también podemos hacer aplicaciones de escritorio,

45
00:01:56.270 --> 00:01:58.750
aplicaciones para móviles y también

46
00:01:59.280 --> 00:02:02.710
desarrollo en el baque para hacer servicios web como

47
00:02:03.380 --> 00:02:07.230
APIs rest o incluso gra Google y cosas de todo tipo.

48
00:02:07.980 --> 00:02:10.110
Digamos que el grado de

49
00:02:10.890 --> 00:02:14.610
aplicaciones es extremadamente amplio dentro de las

50
00:02:14.610 --> 00:02:15.690
plataformas de ejecución.

51
00:02:15.690 --> 00:02:18.370
De todas formas, hay dos principales que sería el navegador

52
00:02:18.370 --> 00:02:21.890
por un lado, y luego javascript como lenguaje de propósito

53
00:02:21.890 --> 00:02:26.210
general que sería dentro de lo que sería la plataforma no de

54
00:02:26.470 --> 00:02:30.330
js de la cual ahora voy a hablar, pues solo brevemente bien,

55
00:02:30.330 --> 00:02:34.650
dentro del navegador, pues es el lenguaje con el cual

56
00:02:35.200 --> 00:02:38.810
empezó todo el tema de dinamismo en las páginas web.

57
00:02:39.210 --> 00:02:42.650
O sea que antes las páginas web eran totalmente estáticas.

58
00:02:42.690 --> 00:02:44.330
Y con java, empezamos a poder

59
00:02:44.960 --> 00:02:47.450
controlar la interacción del usuario,

60
00:02:47.480 --> 00:02:48.970
aplicar pequeños dinamismo,

61
00:02:49.000 --> 00:02:52.410
control de los formularios y todo ese tipo de cosas que

62
00:02:52.880 --> 00:02:56.050
empezaron abrieron el melón de

63
00:02:56.910 --> 00:02:59.910
la web con una plataforma de ejecución de aplicaciones.

64
00:03:00.390 --> 00:03:01.720
Esto ha evolucionado muchísimo.

65
00:03:01.800 --> 00:03:04.040
Y al día de hoy, prácticamente el navegador,

66
00:03:04.040 --> 00:03:06.440
puedes hacer cualquier tipo de aplicación,

67
00:03:06.970 --> 00:03:09.240
tanto juegos con aplicaciones de gestión.

68
00:03:09.560 --> 00:03:12.160
Y todo esto se puede hacer mediante javascript de una manera

69
00:03:12.820 --> 00:03:15.200
muy sencilla o muy compleja,

70
00:03:15.270 --> 00:03:17.360
dependiendo de hasta donde quieres llegar.

71
00:03:17.620 --> 00:03:20.080
Muy bien, entonces, bueno,

72
00:03:20.080 --> 00:03:23.440
un poquito de historia javascript comenzó con un navegador,

73
00:03:23.500 --> 00:03:26.560
ya que solo conocemos los más maduros

74
00:03:27.380 --> 00:03:29.240
que es ne Skye navigator.

75
00:03:29.240 --> 00:03:32.680
Bueno, seguro que muchos conocer conoceréis y es el

76
00:03:33.410 --> 00:03:36.320
preor de Mozilla Firefox y bueno

77
00:03:36.990 --> 00:03:40.200
navigator a través de una alianza en aquella época con San

78
00:03:40.200 --> 00:03:42.240
microsystem, que era la empresa que hacía java.

79
00:03:42.820 --> 00:03:45.400
La aba fue comprada por Oracle, pues,

80
00:03:45.830 --> 00:03:49.000
para promover las tecnologías abiertas, eh

81
00:03:50.820 --> 00:03:53.040
lo estandarizar con

82
00:03:53.660 --> 00:03:56.680
un la empresa con una organización de estación que

83
00:03:56.680 --> 00:03:57.760
se llama s cree.

84
00:03:58.440 --> 00:04:01.000
Y entonces digamos que scrip es el,

85
00:04:01.780 --> 00:04:04.480
es el estándar en el cual se basa el lenguaje

86
00:04:04.530 --> 00:04:06.280
javascript creep.

87
00:04:06.380 --> 00:04:10.560
Son una organización que vela por la evolución

88
00:04:10.560 --> 00:04:11.720
del lenguaje javascript.

89
00:04:12.080 --> 00:04:14.800
Y una vez que publica novedades,

90
00:04:14.800 --> 00:04:18.080
pues son los navegadores los que se encargan de implementar

91
00:04:18.080 --> 00:04:21.200
esas novedades dentro de lo que son los motores de

92
00:04:21.200 --> 00:04:22.320
ejecución de javascript.

93
00:04:23.280 --> 00:04:27.480
Y bien, todo esto es un poco el contexto en el cual nació

94
00:04:27.930 --> 00:04:29.360
javascript, pero al día de hoy,

95
00:04:29.360 --> 00:04:31.960
pues ya lo puedes encontrar incluso fuera del

96
00:04:32.000 --> 00:04:33.240
navegador, como decía antes.

97
00:04:33.980 --> 00:04:37.270
Bien, todo lo que es el desarrollo dentro del navegador,

98
00:04:37.270 --> 00:04:40.510
le llamamos front desarrollo front.

99
00:04:41.550 --> 00:04:43.390
Y como decía antes,

100
00:04:43.690 --> 00:04:47.590
ha hecho que ja script pueda ser desde un pequeño lenguaje

101
00:04:47.620 --> 00:04:51.270
para hacer pequeños jus con la página web a un lenguaje que

102
00:04:51.270 --> 00:04:54.990
pueda hacer totalmente aplicaciones totalmente asombrosas y

103
00:04:54.990 --> 00:04:56.750
control de todo tipo.

104
00:04:56.940 --> 00:05:00.030
Paneles de administración, redes sociales.

105
00:05:01.030 --> 00:05:04.550
Y yo que sé es que prácticamente hay cosas

106
00:05:05.330 --> 00:05:08.030
que son increíbles, como por ejemplo,

107
00:05:08.210 --> 00:05:11.150
el propio editor visual estudio code que está

108
00:05:11.150 --> 00:05:12.270
escrito con javascript.

109
00:05:12.270 --> 00:05:14.990
No sé si lo sabías. Imagino que si está escrito con

110
00:05:14.990 --> 00:05:19.840
javascript y es todo una aplicación, bien, entonces, luego,

111
00:05:19.860 --> 00:05:23.080
aparte de javascript dentro el navegador se dieron cuenta

112
00:05:23.140 --> 00:05:25.640
que se podía sacar en javascript para

113
00:05:26.170 --> 00:05:28.920
utilizarlo fuera del contexto del navegador.

114
00:05:29.040 --> 00:05:33.960
Y entonces aparecieron plataformas como no de js que lo

115
00:05:33.960 --> 00:05:36.480
que hicieron fue sacar el motor de javascript que existía

116
00:05:36.480 --> 00:05:39.440
dentro el navegador Chrome y lo sacaron para afuera y

117
00:05:39.440 --> 00:05:41.040
dijeron vale, pues ahora con ese motor,

118
00:05:41.100 --> 00:05:43.600
yo puedo ejecutar aplicaciones de javascript.

119
00:05:43.920 --> 00:05:47.520
Hicieron lo que sería un un

120
00:05:48.180 --> 00:05:50.400
un entorno de ejecución para poder

121
00:05:51.640 --> 00:05:54.760
directamente ejecutar javascript fuera el navegador.

122
00:05:54.760 --> 00:05:56.600
Y eso nos permitía algunas cosas como, por ejemplo,

123
00:05:57.220 --> 00:06:01.400
el acceso a recursos del sistema operativo

124
00:06:01.990 --> 00:06:05.520
como el sistema de archivos, el acceso

125
00:06:06.120 --> 00:06:10.480
a comandos del terminal y bueno,

126
00:06:10.480 --> 00:06:12.480
incluso programas como bases de datos.

127
00:06:12.600 --> 00:06:14.280
Y todo esto hizo quejado escribir

128
00:06:14.800 --> 00:06:16.480
madurase y tuviese una segunda

129
00:06:19.510 --> 00:06:23.200
vida ya fuera de lo que serían los navegadores.

130
00:06:23.510 --> 00:06:25.320
Este entorno de ejecución le mos en

131
00:06:25.320 --> 00:06:26.440
torno de ejecución baque.

132
00:06:27.080 --> 00:06:30.640
Y con él podemos hacer aplicaciones, como digo, de cualquier

133
00:06:31.920 --> 00:06:34.140
de cualquier tipo, incluso de propósito general,

134
00:06:35.340 --> 00:06:38.550
esto habilitó que muchos desarrolladores pudiesen utilizar

135
00:06:38.550 --> 00:06:41.830
el propio javascript para darle utilidades a

136
00:06:42.530 --> 00:06:43.870
los propios desarrolladores.

137
00:06:44.590 --> 00:06:49.430
Y ahí se generaron incluso osea aplicaciones de escritorio,

138
00:06:49.430 --> 00:06:52.110
como por ejemplo, mencionaba antes servicio del estudio

139
00:06:52.180 --> 00:06:55.790
code, pero también aplicaciones para poder gestionar las

140
00:06:55.790 --> 00:06:58.390
dependencias de los programas utilizando

141
00:06:59.170 --> 00:07:02.350
un el gestor de dependencias de note que se llama mpm

142
00:07:02.670 --> 00:07:04.070
aplicaciones para poder

143
00:07:05.630 --> 00:07:10.510
compilar el javascript y optimizarlo y compilar otros

144
00:07:10.750 --> 00:07:14.710
lenguajes como el CSS preprocesadores y todo eso a través de

145
00:07:14.710 --> 00:07:17.390
herramientas como bit que nos permitían también

146
00:07:18.540 --> 00:07:21.910
todo lo que es el desarrollo moderno con

147
00:07:22.450 --> 00:07:24.790
las herramientas más actuales, etcétera.

148
00:07:24.790 --> 00:07:26.190
O sea jamás a día de hoy,

149
00:07:27.090 --> 00:07:29.470
ya deja de ser un lenguaje en la web,

150
00:07:29.470 --> 00:07:32.190
sino que es un lenguaje con el cual se hace todo tipo de

151
00:07:32.190 --> 00:07:35.860
productos y bien dentro de todas esas aplicaciones,

152
00:07:35.880 --> 00:07:37.020
el lenguaje javascript,

153
00:07:37.290 --> 00:07:39.500
pues enarcamos este curso de javascript,

154
00:07:39.500 --> 00:07:42.860
que es un curso que está pensado para iniciarse el lenguaje,

155
00:07:42.930 --> 00:07:45.500
pero iniciarse de una manera diferente.

156
00:07:46.320 --> 00:07:49.660
Mi idea es conseguir hacer un curso más rápido,

157
00:07:49.660 --> 00:07:52.140
iniciación con los conceptos teóricos escritos,

158
00:07:52.640 --> 00:07:55.220
eh o definidos en videos cortos

159
00:07:55.840 --> 00:07:58.340
que podéis consumir de una manera sencilla.

160
00:07:58.540 --> 00:08:00.060
Y luego con clases prácticas,

161
00:08:00.060 --> 00:08:02.980
queremos haciendo semana tras semana en las clases

162
00:08:02.980 --> 00:08:05.060
prácticas, haremos life coding en vivo.

163
00:08:05.290 --> 00:08:08.660
Estaré abierto para recibir vuestras preguntas y respuestas

164
00:08:08.840 --> 00:08:12.660
en las propias clases del curso porque estáis invitados para

165
00:08:12.850 --> 00:08:16.900
durante la emisión y los videos grabados,

166
00:08:16.900 --> 00:08:18.900
pues los podéis ver a vuestro ritmo.

167
00:08:19.260 --> 00:08:21.620
Y obviamente dejar las preguntas que necesitéis ahí en la

168
00:08:21.620 --> 00:08:24.140
plataforma de escuela y té en todo este curso,

169
00:08:24.140 --> 00:08:27.140
veremos asuntos como la sintaxis, estructuras de control,

170
00:08:27.330 --> 00:08:30.340
funciones, objetos y toda una serie de cosas

171
00:08:30.480 --> 00:08:31.740
que ofrece el lenguaje.

172
00:08:32.480 --> 00:08:36.620
Muy bien, esto es aplicable a el uso de javascript en

173
00:08:36.620 --> 00:08:39.580
cualquier contexto de los anteriores que he mencionado,

174
00:08:39.870 --> 00:08:43.260
tanto el contexto del del

175
00:08:44.090 --> 00:08:45.980
navegador como el contexto

176
00:08:46.520 --> 00:08:49.460
de no jees como el contexto del desarrollo,

177
00:08:49.460 --> 00:08:51.900
aplicaciones de escritorio, aplicaciones para móviles,

178
00:08:51.900 --> 00:08:54.300
cualquier lugar donde quieras utilizar javascript,

179
00:08:54.790 --> 00:08:58.600
dejarme que os presente el curso rápidamente y está aquí un

180
00:08:58.600 --> 00:09:00.880
poco, todo el tema de esquema de clases.

181
00:09:00.880 --> 00:09:02.920
Aquí están las clases que bueno,

182
00:09:02.920 --> 00:09:04.040
solo la que estamos haciendo ahora,

183
00:09:04.460 --> 00:09:06.640
la de conceptos básicos por la programación

184
00:09:07.180 --> 00:09:10.600
que la vais a poder ver ya mismo

185
00:09:11.200 --> 00:09:12.360
y algunas clases,

186
00:09:12.370 --> 00:09:15.160
otras que vamos a definir en el que vamos a

187
00:09:15.160 --> 00:09:16.480
liberar el día de hoy, de acuerdo?

188
00:09:17.360 --> 00:09:21.840
Y ya luego vamos a ir definiendo o liberando diversas clases

189
00:09:22.460 --> 00:09:24.240
de introducción a la programación

190
00:09:25.710 --> 00:09:27.390
y cada semana al final de la semana,

191
00:09:27.420 --> 00:09:29.990
pues tendremos una clase en vivo para poder

192
00:09:30.660 --> 00:09:33.870
practicar con todos los conceptos que se va ir viendo en

193
00:09:33.870 --> 00:09:35.110
cada una de las semanas.

194
00:09:35.630 --> 00:09:37.870
Entonces tenemos estructuras de control, funciones,

195
00:09:38.060 --> 00:09:41.550
objetos utilizadas de lenguaje, y siempre con una clase

196
00:09:42.250 --> 00:09:45.150
en vivo al final para abierto a dudas

197
00:09:45.750 --> 00:09:48.670
y a todo ya prácticas un poquito más detalladas.

198
00:09:49.270 --> 00:09:51.150
Y en el día de hoy, ya el resto del día,

199
00:09:51.150 --> 00:09:53.030
vamos a utilizar p j,

200
00:09:53.330 --> 00:09:56.430
que al fin el principio del video se comentado que es una

201
00:09:56.430 --> 00:10:00.190
librería para poder aprender javascript de una manera

202
00:10:00.190 --> 00:10:03.270
diferente, más dinámica, más entretenida

203
00:10:03.830 --> 00:10:07.270
a través de ejemplos que vamos a

204
00:10:08.210 --> 00:10:12.230
ir viendo durante el durante el curso.

205
00:10:12.550 --> 00:10:16.150
O sea, no vamos a hacer en este curso los típicos ejemplos

206
00:10:16.250 --> 00:10:18.270
de, bueno cuenta, eh,

207
00:10:18.730 --> 00:10:21.670
los números de tal a tal en este orden ahora orden,

208
00:10:21.670 --> 00:10:23.470
orden inverso en pasos de cinco en cinco.

209
00:10:23.470 --> 00:10:26.750
Esos esos ejemplos siglo, los veremos y tal como ejemplos

210
00:10:26.750 --> 00:10:29.310
rápidos durante las clases grabadas,

211
00:10:29.540 --> 00:10:31.670
pero luego todo lo que son las clases prácticas,

212
00:10:31.670 --> 00:10:36.230
las voy a desarrollar con este fragor o librería que nos

213
00:10:36.230 --> 00:10:39.190
permite hacer cosas de lo que es.

214
00:10:39.660 --> 00:10:41.430
Pues bueno, bastante asombrosas.

215
00:10:41.540 --> 00:10:44.550
Pues voy a dejar aquí algunos ejemplos simplemente para

216
00:10:44.610 --> 00:10:45.630
que los veáis.

217
00:10:46.270 --> 00:10:49.550
Nosotros no vamos a llegar este grado de complejidad porque

218
00:10:49.780 --> 00:10:54.430
esto, bueno, requiere cálculos matemáticos, ya os imaginéis,

219
00:10:54.690 --> 00:10:59.590
ya se imaginaréis totalmente fuera de

220
00:11:00.270 --> 00:11:01.590
nuestras intenciones.

221
00:11:02.020 --> 00:11:04.750
Pero con este framework, podéis hacer este tipo de cosas.

222
00:11:05.540 --> 00:11:08.390
Podéis hacer cosas más sencillas como esto,

223
00:11:09.410 --> 00:11:12.110
ese tipo de ejercicios, pues se pueden,

224
00:11:13.890 --> 00:11:15.790
se puede hacer cosillas como estas de una

225
00:11:15.790 --> 00:11:16.870
manera muy, muy sencilla.

226
00:11:17.070 --> 00:11:19.590
Veis que se mueven y tal como una animación, si no.

227
00:11:20.150 --> 00:11:24.870
Y bueno, aquí podéis ver ejemplos de todo tipo

228
00:11:25.490 --> 00:11:27.710
que bueno, este

229
00:11:30.030 --> 00:11:34.290
que bueno cada uno, pues tendrá más o menos

230
00:11:36.280 --> 00:11:40.400
gracia, pero que los podías desarrollar

231
00:11:40.890 --> 00:11:42.320
utilizando javascript.

232
00:11:42.600 --> 00:11:45.760
Y esta librería está muy orientada como estás viendo a

233
00:11:45.910 --> 00:11:47.840
animaciones y todo tipo de cosas.

234
00:11:48.120 --> 00:11:51.960
Entonces pienso que es una buena herramienta para

235
00:11:52.520 --> 00:11:55.040
aprender a programar de una manera distinta,

236
00:11:55.250 --> 00:11:58.240
mucho más entretenida que no va a permitir hacer

237
00:12:00.100 --> 00:12:03.900
ejemplos que no serán los típicos ejemplos de programación

238
00:12:04.160 --> 00:12:07.300
en javascript para aprender todo lo que son variables,

239
00:12:09.280 --> 00:12:13.610
tipos, estructuras de control, objetos,

240
00:12:14.160 --> 00:12:16.130
funciones, etcétera, etcétera.

241
00:12:16.750 --> 00:12:19.530
Hoy vamos a hacer una presentación a esta librería y

242
00:12:19.530 --> 00:12:21.130
aprenderemos algunos conceptos,

243
00:12:21.640 --> 00:12:23.930
pero ya os adelanto que algunos temas

244
00:12:24.870 --> 00:12:25.970
de los que vamos a ver hoy,

245
00:12:26.120 --> 00:12:29.170
pues los iremos viendo con calma durante el curso porque,

246
00:12:29.300 --> 00:12:33.530
claro, eh, a poco que quieras empezar a trabajar un poquito.

247
00:12:33.560 --> 00:12:36.370
Pues vamos a tener que trabajar con algunos conceptos que

248
00:12:36.370 --> 00:12:40.010
vamos a a ver envios más posteriormente, pero bueno,

249
00:12:40.440 --> 00:12:44.810
para poder hacer una demostración un poco mejor de las

250
00:12:44.810 --> 00:12:46.410
posibilidades de la librería.

251
00:12:46.410 --> 00:12:48.970
Pues voy a adelantarme en esta clase de presentación

252
00:12:50.130 --> 00:12:53.490
haciendo algunas cosas que, digamos, iremos viendo

253
00:12:54.050 --> 00:12:57.050
a largo de este curso de iniciación a la programación con

254
00:12:57.080 --> 00:13:00.530
más detalle en los pasos en adelante.

255
00:13:01.450 --> 00:13:05.130
Entonces esta librería tiene una utilidad dentro de lo que

256
00:13:05.130 --> 00:13:08.370
es este mismo sitio web que nos permite editar

257
00:13:08.880 --> 00:13:10.890
código en el mismo programa,

258
00:13:11.350 --> 00:13:15.290
con lo cual no hace falta que estemos abriendo un editor

259
00:13:16.150 --> 00:13:17.530
que bueno, que no hay ningún problema.

260
00:13:17.530 --> 00:13:20.330
Tu puedes perfectamente utilizar esta librería dentro de un

261
00:13:20.330 --> 00:13:22.050
editor y hacerlo por tu cuenta.

262
00:13:22.440 --> 00:13:26.530
Pero con esta utilidad que este es el editor de p

263
00:13:27.110 --> 00:13:28.650
editor online p j

264
00:13:29.470 --> 00:13:33.090
nos permite sin necesidad de enredarnos.

265
00:13:33.160 --> 00:13:36.370
Pues empezar a hacer life coding

266
00:13:36.910 --> 00:13:38.690
sin tener que abrir un editor,

267
00:13:38.860 --> 00:13:41.970
abrir el navegador para ver los ejemplos en marcha y todo

268
00:13:42.070 --> 00:13:46.330
eso con lo cual mejora todavía lo que es la

269
00:13:47.070 --> 00:13:50.090
la experiencia de aprender programación, creo,

270
00:13:50.450 --> 00:13:53.930
y la experiencia de escribir pequeños programas que nos

271
00:13:54.130 --> 00:13:56.770
permitan aprender las cosas básicas de la programación

272
00:13:58.170 --> 00:14:01.850
a todo esto, faltaría por definir que es programación

273
00:14:02.410 --> 00:14:03.570
y todo ese tipo de cosas.

274
00:14:04.350 --> 00:14:07.730
Eso lo vais a poder poner en ver en este libro.

275
00:14:08.360 --> 00:14:10.610
Digo este libro en este video que

276
00:14:11.620 --> 00:14:14.690
vamos a dejar abierto como gratuito,

277
00:14:14.690 --> 00:14:19.450
así pods ver un poco el esquema de vídeos grabados.

278
00:14:19.730 --> 00:14:23.650
Y también tenéis un poco la idea de lo que es el curso,

279
00:14:23.940 --> 00:14:27.730
tanto lo que sería una clase en vivo como la de hoy,

280
00:14:28.080 --> 00:14:31.290
como una clase grabada ya

281
00:14:32.460 --> 00:14:35.090
disponible para poder, o sea,

282
00:14:35.830 --> 00:14:37.690
ver bajo demanda cuando queráis.

283
00:14:38.330 --> 00:14:40.090
Entonces aquí lo digo, por qué?

284
00:14:40.090 --> 00:14:43.490
Porque bueno, habría que empezar un curso de programación

285
00:14:43.730 --> 00:14:45.170
diciendo que es programar porque quiero

286
00:14:45.200 --> 00:14:47.210
programar y todo ese tipo de cosas.

287
00:14:47.410 --> 00:14:50.130
Y eso lo vais a poder ver en ese video, de acuerdo,

288
00:14:51.020 --> 00:14:53.980
eso por un lado.

289
00:14:54.620 --> 00:14:57.940
Y luego, eh, pues a partir de ahí,

290
00:14:58.240 --> 00:15:02.380
ya podíamos empezar aquí a tirar líneas de código porque ya

291
00:15:02.380 --> 00:15:04.700
hemos definido algunas cosas que son expresiones,

292
00:15:04.930 --> 00:15:06.300
código y todo ese tipo de cosas.

293
00:15:06.820 --> 00:15:09.860
Y ya nos podíamos poner a programar, vale?

294
00:15:10.170 --> 00:15:12.780
Pero aquí también para program a programar.

295
00:15:12.780 --> 00:15:15.780
Necesitamos un poco explicar qué es esto de aquí

296
00:15:16.620 --> 00:15:18.820
y porque lo queremos porque empezamos con un

297
00:15:18.820 --> 00:15:19.900
lienzo de esta manera.

298
00:15:20.270 --> 00:15:23.220
Bueno, un lienzo porque empezamos con un código como

299
00:15:23.370 --> 00:15:24.620
este, etcétera.

300
00:15:25.540 --> 00:15:28.180
Y muy bien, eh, lo explico ya.

301
00:15:28.540 --> 00:15:30.940
Entonces p j, como hemos visto,

302
00:15:30.940 --> 00:15:34.340
es una librería que nos permite dibujo,

303
00:15:35.520 --> 00:15:38.300
nos permite animación y nos permite también

304
00:15:38.300 --> 00:15:40.060
interacción, de acuerdo?

305
00:15:40.770 --> 00:15:43.460
Pero como una librería,

306
00:15:43.680 --> 00:15:47.140
lo que nos ofrece son ya cosas hechas que nos van a

307
00:15:47.140 --> 00:15:50.740
facilitar la vida porque no vamos a empezar a desarrollar

308
00:15:50.740 --> 00:15:52.260
desde cero nuestros programas.

309
00:15:53.010 --> 00:15:57.300
Bien, y dentro de las cosas que nos ofrece ya hechas, lo que

310
00:15:57.880 --> 00:16:01.540
ofrece es unas o lo que lo que

311
00:16:03.210 --> 00:16:05.670
el modo de trabajo que te impone,

312
00:16:06.250 --> 00:16:09.710
porque esto es como un framework, un marco de trabajo

313
00:16:10.570 --> 00:16:13.710
te impone una manera de proceder en la cual

314
00:16:13.940 --> 00:16:15.510
existen unas funciones.

315
00:16:17.140 --> 00:16:20.140
Y tú lo que vas a hacer es escribir el código

316
00:16:22.000 --> 00:16:24.100
que quieres que ocurra cuando

317
00:16:25.150 --> 00:16:27.780
pasen cosas dentro de tus programas.

318
00:16:28.560 --> 00:16:32.740
Muy bien, esto es un tema un poco avanzado.

319
00:16:33.160 --> 00:16:35.260
Es cierto, como dije en esta clase,

320
00:16:35.260 --> 00:16:38.220
vamos a ver cosas un poco avanzadas que salen de lo que es

321
00:16:38.220 --> 00:16:39.340
la introducción a la programación.

322
00:16:39.770 --> 00:16:42.780
Pero en términos de de

323
00:16:44.240 --> 00:16:47.980
de diseño de software, le llamamos inversión de control.

324
00:16:48.530 --> 00:16:53.070
Quiere decir que en vez de escribir yo mi programa y ir

325
00:16:53.090 --> 00:16:56.550
línea a línea diciendo que quiero que hagan mis programas,

326
00:16:57.130 --> 00:17:01.030
voy a utilizar esta librería que él me propone un modo de

327
00:17:01.030 --> 00:17:04.310
trabajo inverso en el cual ha invertido el control del

328
00:17:04.310 --> 00:17:06.750
programa en vez de ser yo el que define las

329
00:17:06.750 --> 00:17:07.910
cosas que van a ocurrir.

330
00:17:08.330 --> 00:17:10.590
El dice que

331
00:17:11.460 --> 00:17:13.670
escriba una serie de funciones

332
00:17:14.210 --> 00:17:17.870
que se ejecutarán en los modos en los momentos en los que

333
00:17:17.870 --> 00:17:19.190
el lo necesite.

334
00:17:19.790 --> 00:17:21.150
Y cuáles son esas funciones?

335
00:17:21.150 --> 00:17:24.090
Por ejemplo, la función set tap se tap.

336
00:17:24.590 --> 00:17:27.610
Es una función que el va a ejecutar cuando

337
00:17:28.120 --> 00:17:32.530
inicien los programas escritos con p j.

338
00:17:32.770 --> 00:17:36.170
S, por cierto, estos programas se llaman sketch.

339
00:17:36.580 --> 00:17:38.770
Ellos dentro de la librería le dicen vale, pues tú,

340
00:17:38.770 --> 00:17:43.570
cuando definas un programa dentro de p j, eso es com sketch,

341
00:17:44.750 --> 00:17:47.950
bueno, es el concepto, y ellos lo definen así.

342
00:17:48.350 --> 00:17:52.760
Entonces la la inicialización de un sketch te piden que la

343
00:17:52.760 --> 00:17:56.880
escribas en un método en una función que se llama set tap.

344
00:17:57.660 --> 00:17:59.910
Bien, es verdad, vamos hablar todavía en funciones.

345
00:17:59.910 --> 00:18:03.270
Las vamos a ver con calma durante el curso.

346
00:18:03.270 --> 00:18:04.270
Pero bueno,

347
00:18:04.410 --> 00:18:07.550
nos tenemos que permitir estas pequeñas licencias para

348
00:18:07.550 --> 00:18:11.710
empezar a trabajar con p j en esta sesión de introducción.

349
00:18:12.090 --> 00:18:13.990
Muy bien, que hace set tap,

350
00:18:14.370 --> 00:18:17.910
por lo que hace es crear un lienzo con create cambas,

351
00:18:17.910 --> 00:18:19.390
lo que está diciéndoles, créame,

352
00:18:19.390 --> 00:18:21.390
un lienzo para poder dibujar.

353
00:18:21.990 --> 00:18:26.130
Y ese lienzo va a tener coordenadas

354
00:18:26.910 --> 00:18:30.940
que son indican perdón, el tamaño

355
00:18:31.560 --> 00:18:35.820
que va a tener ese lienzo cuando le le dice aquí 400

356
00:18:36.490 --> 00:18:40.300
coma 400, le está indicando el tamaño de

357
00:18:41.190 --> 00:18:44.850
ancho y de alto que tiene el lienzo.

358
00:18:44.950 --> 00:18:47.410
Si le de aquí a play, lo vais a ver el lienzo.

359
00:18:49.030 --> 00:18:51.120
Esto mi de 400 por 400.

360
00:18:51.940 --> 00:18:56.720
Si yo, por ejemplo, le dijese que de ancho quiero 100 píe

361
00:18:57.690 --> 00:19:00.870
al darle play me lo hace 100 píe de ancho.

362
00:19:01.860 --> 00:19:04.000
De momento vamos con 400, que es,

363
00:19:04.820 --> 00:19:06.570
vamos a sentirnos un poquito menos

364
00:19:09.130 --> 00:19:10.850
restringidos en espacio, verdad?

365
00:19:11.390 --> 00:19:15.250
Muy bien, y esto es el método o la función se et tap que nos

366
00:19:15.250 --> 00:19:18.770
permite escribir todo el código de industrialización.

367
00:19:19.230 --> 00:19:22.370
La función se tap, como digo, no la ejecutas tú

368
00:19:22.910 --> 00:19:24.690
es el propio p j.

369
00:19:24.970 --> 00:19:28.490
S. El que va a decir va a decir una vez cuando inicializa el

370
00:19:28.490 --> 00:19:31.250
lienzo, voy a decir, eh, je set up,

371
00:19:32.030 --> 00:19:35.350
y tú eres el que defines dentro de set up,

372
00:19:35.770 --> 00:19:36.910
que es lo que quieres hacer.

373
00:19:37.010 --> 00:19:39.390
De momento, simplemente hemos hecho una inicialización del

374
00:19:39.390 --> 00:19:41.150
lienzo, pero luego podemos poner más cosas.

375
00:19:42.420 --> 00:19:46.820
Y luego tenemos otra función que es la función dr,

376
00:19:47.440 --> 00:19:52.280
que esta función sirve para dibujar muy bien esta función.

377
00:19:52.340 --> 00:19:54.480
Lo que hace es bueno, como su nombre indica

378
00:19:55.390 --> 00:19:57.480
dibujar cosas en el lienzo.

379
00:19:58.220 --> 00:20:01.340
Y en este caso aquí pondremos todo lo que yo quiero que se

380
00:20:01.400 --> 00:20:03.260
dibuje a través del sketch.

381
00:20:04.010 --> 00:20:07.940
Bien, aquí lo que hace la función draw es definir que quiero

382
00:20:08.080 --> 00:20:12.660
un background con 220, y que es eso de 220.

383
00:20:12.660 --> 00:20:14.700
Ahora seguido lo explico antes,

384
00:20:14.700 --> 00:20:17.620
quiero cerrar el tema de la inversión de control,

385
00:20:18.260 --> 00:20:22.860
diciendo que drow es un una función que se va a ejecutar

386
00:20:23.200 --> 00:20:24.740
cuando el framework quiere.

387
00:20:25.100 --> 00:20:29.460
Y cuando va a querer, pues, cada pequeño instante

388
00:20:30.280 --> 00:20:35.020
el framework va hacer una ejecución de la función dr.

389
00:20:36.120 --> 00:20:39.440
Y esto que quiere decir que esta función se está ejecutando

390
00:20:39.620 --> 00:20:43.360
en un loop en una iteración de manera

391
00:20:44.710 --> 00:20:49.030
muy, muy rápida y de manera también infinita.

392
00:20:49.680 --> 00:20:52.430
Ahora, no os parece que haya ningún tipo

393
00:20:53.170 --> 00:20:55.830
de ejecución infinita porque la función dr

394
00:20:56.060 --> 00:20:57.310
hace siempre lo mismo.

395
00:20:57.860 --> 00:21:01.430
Pero si en la función dr o cambiásemos el código,

396
00:21:01.470 --> 00:21:05.470
y ahora lo vamos a hacer, pues podríamos ver que se va

397
00:21:05.640 --> 00:21:07.310
ejecutando muchas veces.

398
00:21:08.070 --> 00:21:10.720
Bien. Y entonces tenemos estos dos,

399
00:21:10.990 --> 00:21:15.280
esas dos funciones que se van a ejecutar en los momentos en

400
00:21:15.280 --> 00:21:16.920
los que la librería necesite.

401
00:21:16.990 --> 00:21:20.680
Veremos hoy otras funciones que también se van a ejecutar en

402
00:21:20.680 --> 00:21:23.360
otros momentos dentro de lo que son los sketches,

403
00:21:23.740 --> 00:21:26.680
por ejemplo, para gestionar la interacción con el usuario,

404
00:21:26.950 --> 00:21:28.360
todo eso ya llegaremos,

405
00:21:28.870 --> 00:21:32.160
pero vamos a empezar a modificar un poco nuestro

406
00:21:32.750 --> 00:21:36.150
nuestro ejemplo, quiero antes de nada

407
00:21:36.780 --> 00:21:39.310
mostraros cómo la función dr.

408
00:21:39.890 --> 00:21:43.910
De verdad se está ejecutando de manera infinita y continua.

409
00:21:44.360 --> 00:21:45.390
Bueno, antes de nada,

410
00:21:45.390 --> 00:21:48.030
quiero explicaros también por qué, qué es este?

411
00:21:48.780 --> 00:21:50.390
Esto es un color, vale?

412
00:21:51.050 --> 00:21:55.210
Un color que quiere decir que vale,

413
00:21:55.840 --> 00:22:00.530
esto es como el rrgb y tenéis idea del htl los colores se

414
00:22:00.530 --> 00:22:04.810
expresan con rrgb, pero aquí solo estoy dándole un valor.

415
00:22:05.950 --> 00:22:08.610
No, no son tres valores como rojo,

416
00:22:08.980 --> 00:22:11.040
verde y azul, eh?

417
00:22:11.220 --> 00:22:13.680
No es solo un valor. Pues cuando yo le indico solo un valor

418
00:22:13.820 --> 00:22:17.080
en lo que hace es que los tres valores toman el mismo valor,

419
00:22:17.660 --> 00:22:22.330
con lo cual si yo esto le dije ese cero y le doy play,

420
00:22:23.070 --> 00:22:24.250
me lo pinta en negro.

421
00:22:25.010 --> 00:22:27.290
Y si le doy 255,

422
00:22:27.350 --> 00:22:30.690
que sería el valor más grande que podáis

423
00:22:30.690 --> 00:22:32.250
colocar, te lo pintan blanco.

424
00:22:32.250 --> 00:22:35.090
Prácticamente no se ve el blanco dependiendo un poco

425
00:22:35.090 --> 00:22:36.250
del contraste de vuestro monitor.

426
00:22:36.310 --> 00:22:39.810
Lo veis a ver mejor o peor, pero eh es, están blanco.

427
00:22:40.400 --> 00:22:45.370
Bien, entonces 220 es un color que era más tirando a blanco.

428
00:22:45.510 --> 00:22:49.210
Si le pongo 200, pues es un gris un poquito menos claro.

429
00:22:49.950 --> 00:22:52.730
Muy bien. Y cómo puedo demostraros que Dra.

430
00:22:53.000 --> 00:22:57.530
Ejecuta de manera continuada e infinita?

431
00:22:57.840 --> 00:23:01.490
Pues, por ejemplo, podría hacer aquí un valor random

432
00:23:02.730 --> 00:23:04.930
y así random quiere decir aleatorio.

433
00:23:05.490 --> 00:23:09.530
Y así podemos ver cómo el background se va a ejecutar de

434
00:23:09.530 --> 00:23:13.570
manera que cada vez tenga un color aleatorio diferente

435
00:23:14.400 --> 00:23:16.970
para hacer un número aleatorio.

436
00:23:16.970 --> 00:23:21.370
Javascript ofrece utilidades, pero la librería p j.

437
00:23:21.650 --> 00:23:24.890
S ofrece unas todavía de un nivel un poquito superior.

438
00:23:25.370 --> 00:23:27.610
Y ellos nos ofrecen una función que se llama random,

439
00:23:28.530 --> 00:23:31.990
que nos permite decirle un valor entre un

440
00:23:32.300 --> 00:23:34.230
mínimo y un máximo.

441
00:23:35.660 --> 00:23:38.100
Entonces esto dibujará un color

442
00:23:38.890 --> 00:23:41.700
gris siempre gris porque solo no estamos indicando un valor

443
00:23:42.510 --> 00:23:44.620
entre cero y 255.

444
00:23:44.720 --> 00:23:48.790
Si yo le de a play, hace aquí un un

445
00:23:51.330 --> 00:23:53.930
parpadeo insoportable, verdad?

446
00:23:54.320 --> 00:23:58.730
Esto es porque realmente estamos haciendo, eh,

447
00:23:59.070 --> 00:24:01.730
muchas veces ese cambio de color lo he parado porque

448
00:24:01.730 --> 00:24:02.810
si no nos puede marear.

449
00:24:03.770 --> 00:24:08.570
Y como puedo conseguir que ese parpadeo no sea tan

450
00:24:08.570 --> 00:24:13.010
insoportable, pues bien, lo puedo hacer con una función

451
00:24:13.750 --> 00:24:17.450
que la voy a ejecutar dentro del set up que va a cambiar el

452
00:24:17.450 --> 00:24:22.090
número de frames por segundo que tenemos en las animaciones.

453
00:24:26.540 --> 00:24:29.340
Y si le digo, por ejemplo, 10 French por segundo

454
00:24:30.040 --> 00:24:32.020
en lo que va a hacer es que va a cambiar

455
00:24:34.090 --> 00:24:36.730
y va a hacer 10 cambios de color por segundo.

456
00:24:37.980 --> 00:24:39.640
Lo es, ahora es más soportable,

457
00:24:40.070 --> 00:24:42.440
pero todavía sigue siendo demasiado parpadeo.

458
00:24:42.440 --> 00:24:44.760
Si le digo tres ahora en un segundo,

459
00:24:44.970 --> 00:24:46.640
hará tres cambios de gris.

460
00:24:49.900 --> 00:24:52.710
Bien, si no me gusta el gris, me parece muy aburrido.

461
00:24:52.710 --> 00:24:55.070
Pues vamos a utilizar valores

462
00:24:55.810 --> 00:24:58.150
de color rojo.

463
00:24:58.610 --> 00:25:01.310
Por ejemplo, si pongo cero como CE,

464
00:25:01.970 --> 00:25:06.430
el primer valor será el rojo, que podrá ser desde muy oscuro

465
00:25:07.070 --> 00:25:09.880
a muy claro o muy brillante.

466
00:25:10.520 --> 00:25:13.360
Y luego a más cantidad de rojo, menos cantidad de rojo, no.

467
00:25:14.400 --> 00:25:18.920
Y luego de verde y azul. Pues le digo cero.

468
00:25:19.200 --> 00:25:22.970
Entonces, pues nada si le doy aquí a play a lo

469
00:25:22.970 --> 00:25:24.090
hacen tonalidades de rojo.

470
00:25:25.030 --> 00:25:29.040
Vale, muy bien, pues ya tenemos un primer

471
00:25:30.260 --> 00:25:35.200
eje en el cual nos ha demostrado que estamos trabajando

472
00:25:35.540 --> 00:25:39.080
ya con código y que estamos haciendo cosas, pues

473
00:25:40.110 --> 00:25:43.520
más divertidas que lo que sería una introducción a la

474
00:25:43.520 --> 00:25:46.040
aprobación típica, eh?

475
00:25:47.270 --> 00:25:50.120
Bien, entonces vamos a seguir trabajando aquí

476
00:25:50.140 --> 00:25:52.730
con p js.

477
00:25:53.270 --> 00:25:58.050
Voy a para esta animación del background porque no me gusta,

478
00:25:58.230 --> 00:26:01.330
quiero decir, no, que no me guste, no.

479
00:26:02.260 --> 00:26:05.510
Bueno, voy a, voy a guardar esto,

480
00:26:05.980 --> 00:26:08.780
pero voy a guardar esto con un.

481
00:26:09.080 --> 00:26:11.980
Por cierto, si no estés logue,

482
00:26:12.000 --> 00:26:15.060
os podéis loar aquí aparecer a una opción para lo guiaros.

483
00:26:15.340 --> 00:26:19.620
Y esto permite guardar todos los proyectos

484
00:26:20.200 --> 00:26:23.060
con cualquier nombre que vuestros le deis aquí.

485
00:26:23.620 --> 00:26:27.580
Entonces, vamos a poner en este ejemplo ejemplo colores,

486
00:26:29.020 --> 00:26:30.620
y le voy a ya poner CE CE

487
00:26:31.130 --> 00:26:35.160
para que se quede aquí.

488
00:26:35.160 --> 00:26:38.000
El código tampoco tiene mucho interés este código,

489
00:26:38.000 --> 00:26:39.120
pero bueno, vamos a,

490
00:26:39.570 --> 00:26:43.360
vamos a hacer aquí un nuevo archivo para empezar de nuevo.

491
00:26:46.390 --> 00:26:51.240
Muy bien, entonces, empezando con un nuevo archivo,

492
00:26:52.970 --> 00:26:56.280
vamos a hacer algo diferente.

493
00:26:56.570 --> 00:27:01.360
Vamos a dibujar formas dentro de la pantalla.

494
00:27:02.040 --> 00:27:05.760
Y para dibujar formas de la pantalla dentro del método d,

495
00:27:05.760 --> 00:27:09.960
drop o draw, lo que puedo hacer es utilizar

496
00:27:10.550 --> 00:27:14.560
funciones que me ofrece p j como por ejemplo,

497
00:27:14.710 --> 00:27:15.800
para hacer un círculo,

498
00:27:15.950 --> 00:27:17.920
pero también ese para hacer un cuadrado,

499
00:27:17.940 --> 00:27:19.640
un triángulo, un polígono.

500
00:27:20.100 --> 00:27:23.960
Hay un montón de funciones para hacer prácticamente

501
00:27:25.250 --> 00:27:26.390
lo que eso puede ocurrir.

502
00:27:26.500 --> 00:27:29.590
Líneas, líneas curvas rectas.

503
00:27:30.320 --> 00:27:31.470
Bueno, es,

504
00:27:31.470 --> 00:27:34.790
es una librería muy completa para lo que es el dibujo

505
00:27:35.830 --> 00:27:40.270
y incluso se puede hacer dibujo en d con con esta librería.

506
00:27:41.070 --> 00:27:44.730
Bien, entonces vamos a hacer algo sencillo.

507
00:27:45.330 --> 00:27:49.510
Y lo que voy a hacer es un círculo muy bien.

508
00:27:49.990 --> 00:27:53.270
Entonces me ofrece una función que se llama Circle

509
00:27:54.950 --> 00:27:58.110
y que me permite escribir aquí las

510
00:27:59.030 --> 00:28:01.800
propiedades del círculo que quiero dibujar.

511
00:28:02.200 --> 00:28:03.680
Y esas propiedades son primero

512
00:28:04.460 --> 00:28:07.840
la posición del círculo que se define con una coordenada x y

513
00:28:07.840 --> 00:28:10.590
una coordenada y en un lienzo.

514
00:28:11.040 --> 00:28:14.830
Vamos a ver, voy a abrir aquí el lienzo en un lienzo,

515
00:28:15.490 --> 00:28:18.030
la posición cero como cero de la x.

516
00:28:18.070 --> 00:28:20.190
Y la ahí empieza en esta parte de aquí.

517
00:28:21.220 --> 00:28:24.700
A veces en matemáticas, ponemos aquí en la posición CE,

518
00:28:24.970 --> 00:28:27.100
pero aquí en p j,

519
00:28:27.760 --> 00:28:30.460
el origen de las coordenadas está en esta esquina aquí.

520
00:28:31.370 --> 00:28:36.060
Ok? Entonces si yo quiero dibujar el círculo

521
00:28:36.710 --> 00:28:39.140
hacia la derecha,

522
00:28:39.670 --> 00:28:42.260
tengo que aumentar el eje de coordenadas.

523
00:28:43.240 --> 00:28:46.160
Y si yo quiero dibujar el círculo hacia abajo,

524
00:28:46.690 --> 00:28:48.760
tengo que aumentar el eje de coordenadas.

525
00:28:48.870 --> 00:28:52.770
Pues hacia abajo, cómo podría dibujar el círculo en centro?

526
00:28:53.240 --> 00:28:56.290
Pues simplemente diciendo que el círculo

527
00:28:57.230 --> 00:28:59.930
lo dibuje en la posesión 200

528
00:29:01.990 --> 00:29:06.640
coma 200 porque 200 porque el lienzo ocupa 400.

529
00:29:07.520 --> 00:29:11.120
Entonces mi círculo lo va a poner en la posición central del

530
00:29:11.220 --> 00:29:14.680
lienzo en la que es las 200 por 200, no?

531
00:29:16.080 --> 00:29:17.960
Muy bien. Y luego,

532
00:29:18.080 --> 00:29:21.280
a partir aparte de estos valores que serían las coordenadas

533
00:29:21.280 --> 00:29:22.520
donde tiene que dibujar el círculo,

534
00:29:23.140 --> 00:29:25.480
le tenemos que indicar el tamaño del círculo

535
00:29:26.100 --> 00:29:29.080
que en este caso lo voy a indicar como 100 pixe

536
00:29:29.820 --> 00:29:31.200
de diámetro.

537
00:29:32.470 --> 00:29:34.770
Muy bien, pues ya está con esto,

538
00:29:35.650 --> 00:29:38.180
conseguimos dibujar un círculo en p cinco, jodas.

539
00:29:38.200 --> 00:29:43.160
Ese ahí apareció en el centro del lienzo

540
00:29:43.720 --> 00:29:47.800
y un tamaño desde aquí aquí o desde aquí aquí de 100

541
00:29:48.350 --> 00:29:49.600
ples de ancho.

542
00:29:49.970 --> 00:29:51.840
Vamos a hacer un círculo un poco mayor.

543
00:29:52.190 --> 00:29:55.600
Pues 300 a ver aquí.

544
00:29:55.890 --> 00:29:59.040
Ahora les play y ya lo tienes aquí un poquito mayor.

545
00:29:59.550 --> 00:30:00.760
Estupendo. Pues nada,

546
00:30:00.930 --> 00:30:03.040
vamos a dejarlo un 100 que me gustaba más.

547
00:30:04.690 --> 00:30:06.540
Pues esto es

548
00:30:08.860 --> 00:30:12.120
una primera forma, como digo, hay muchas otras formas,

549
00:30:12.390 --> 00:30:14.920
pero voy a hablaros de variables.

550
00:30:15.370 --> 00:30:17.960
Ahora vamos a trabajar con variables,

551
00:30:18.340 --> 00:30:20.960
que sería un primer concepto de programación.

552
00:30:21.420 --> 00:30:23.600
Las variables son lugares en la

553
00:30:25.520 --> 00:30:27.760
o son identificadores o nombres

554
00:30:28.340 --> 00:30:30.920
de lugares en la memoria de javascript

555
00:30:30.920 --> 00:30:32.080
por la memoria del ordenador.

556
00:30:32.080 --> 00:30:34.320
Pero una memoria que está gestionada por el lenguaje

557
00:30:34.320 --> 00:30:38.530
javascript que permite guardar datos muy bien.

558
00:30:39.170 --> 00:30:43.570
Y entonces cuando yo tengo un programa,

559
00:30:43.870 --> 00:30:47.970
un lenguaje de probación, pues yo puedo, al manejar

560
00:30:48.630 --> 00:30:53.440
muchos datos y cada uno de esos datos que maneje,

561
00:30:53.440 --> 00:30:56.240
pues generalmente lo voy a guardar en algún lugar al cual

562
00:30:56.320 --> 00:30:57.600
pueda acceder más tarde.

563
00:30:58.600 --> 00:31:00.480
Entonces, las variables en javascript,

564
00:31:00.910 --> 00:31:05.000
esos lugares donde yo puedo guardar cosas,

565
00:31:05.870 --> 00:31:09.440
pues se crean con una palabra que es led.

566
00:31:09.960 --> 00:31:13.160
Y a continuación le damos el nombre de la variable.

567
00:31:13.990 --> 00:31:15.890
Voy a poner aquí el nombre de la variable.

568
00:31:15.950 --> 00:31:19.970
Le le voy a llamar x porque es la coordenada x,

569
00:31:20.650 --> 00:31:24.090
y le voy a decir que x vale, pues cero.

570
00:31:24.590 --> 00:31:28.940
Ok, como

571
00:31:29.290 --> 00:31:32.540
estáis viendo, x es el nombre de la variable,

572
00:31:32.720 --> 00:31:37.060
es el identificador que me va a permitir saber el lugar

573
00:31:37.060 --> 00:31:38.580
donde estoy guardando un dato.

574
00:31:39.300 --> 00:31:42.420
Y luego con javascript, podemos utilizar este operador,

575
00:31:42.420 --> 00:31:47.220
que es el operador de asignación para asignar un dato

576
00:31:48.570 --> 00:31:50.780
en esta variable.

577
00:31:51.950 --> 00:31:55.030
Entonces éste en este mismo paso, estoy

578
00:31:55.900 --> 00:31:57.240
no sólo creando una variable,

579
00:31:57.790 --> 00:32:01.560
sino además asignándole un primer valor a esta variable.

580
00:32:03.060 --> 00:32:06.710
Esas variables me permite el vo utilizarlas a través de lo

581
00:32:06.710 --> 00:32:09.750
que sería el identificador que en este caso es la x.

582
00:32:10.570 --> 00:32:14.080
Ahora el círculo ya no va a estar pintado en la posesión

583
00:32:14.080 --> 00:32:15.560
200 por 200.

584
00:32:16.220 --> 00:32:20.920
Va a estar pintado en la posición x, siendo que x vale CE

585
00:32:22.000 --> 00:32:24.560
y en la posición 200, o sea,

586
00:32:24.820 --> 00:32:28.680
la coordenada x sería desde la izquierda a derecha

587
00:32:29.300 --> 00:32:33.800
en la posición cero sea en el eje de las coordenadas, el e,

588
00:32:33.800 --> 00:32:34.880
ese la cordada x,

589
00:32:34.960 --> 00:32:38.480
y luego en la posesión 200 en el ese de la

590
00:32:38.480 --> 00:32:41.140
ahí aparece aquí.

591
00:32:41.320 --> 00:32:45.660
El centro del círculo está puesto en el borde del lienzo.

592
00:32:45.660 --> 00:32:47.460
Por eso nos aparece solo la mitad

593
00:32:48.410 --> 00:32:50.790
del círculo porque la otra mitad no se ve que

594
00:32:50.790 --> 00:32:51.910
está fuera del lienzo.

595
00:32:53.600 --> 00:32:57.680
Y bien, esto es una variable y las variables.

596
00:32:58.940 --> 00:33:02.530
Bueno, todo esto un paréntesis para decir que obviamente en

597
00:33:02.530 --> 00:33:04.490
el curso se van a hablar de variables.

598
00:33:04.500 --> 00:33:07.850
Vamos a ir más despacio y vamos a ver otros ejemplos.

599
00:33:07.930 --> 00:33:10.490
Y vamos a hablar en tipos de datos que no estoy son cosas

600
00:33:10.870 --> 00:33:12.210
que me estoy saltando aquí,

601
00:33:13.730 --> 00:33:16.260
pero es por dar un poco una introducción así,

602
00:33:16.800 --> 00:33:18.260
una vista de pájaro, las cosas que

603
00:33:18.260 --> 00:33:19.420
podemos hacer con el lenguaje.

604
00:33:19.980 --> 00:33:22.020
Y con esta librería p j. S.

605
00:33:22.480 --> 00:33:24.380
Muy bien, pues como estábamos viendo,

606
00:33:25.320 --> 00:33:27.140
estaba diciendo las variables

607
00:33:28.020 --> 00:33:32.060
Stone o teóricamente se hacen para que puedan variar con el

608
00:33:32.060 --> 00:33:33.220
tiempo, de ahí su nombre.

609
00:33:34.060 --> 00:33:38.820
Entonces, lo que voy a hacer es que dentro del método draw,

610
00:33:39.520 --> 00:33:42.580
voy a cambiarle el valor a x.

611
00:33:43.140 --> 00:33:44.500
Y para cambiar el valor a x,

612
00:33:44.500 --> 00:33:46.540
simplemente voy a decir que la x

613
00:33:47.160 --> 00:33:50.340
sea igual a lo que ya valía la x antes.

614
00:33:51.260 --> 00:33:53.700
Y además lo voy a incrementar en uno.

615
00:33:54.960 --> 00:33:59.610
Esto va a generar una animación con j

616
00:34:00.190 --> 00:34:03.490
porque cada invocación de la función draw

617
00:34:04.160 --> 00:34:06.850
irá pintando un círculo en

618
00:34:07.700 --> 00:34:10.440
una posición distinta porque la x va a ir

619
00:34:10.440 --> 00:34:11.480
variando con el tiempo.

620
00:34:12.080 --> 00:34:14.200
Y vamos a ver lo que ocurre. Fijaros.

621
00:34:14.240 --> 00:34:17.000
Ya tenemos nuestra primera animación con p. J.

622
00:34:18.070 --> 00:34:19.180
Está chulo, verdad?

623
00:34:19.190 --> 00:34:22.580
Bueno, es muy, muy básico, pero para

624
00:34:23.160 --> 00:34:24.300
no estar empezando,

625
00:34:24.430 --> 00:34:26.420
hacer programación, pues estaba muy bien.

626
00:34:26.870 --> 00:34:28.500
Ahora quiero que veáis un detalle.

627
00:34:28.970 --> 00:34:30.860
Esta animación, por qué se anima?

628
00:34:31.240 --> 00:34:34.980
Se anima porque en cada paso de dr.

629
00:34:35.040 --> 00:34:37.740
De la función, dr, lo que se hace es volver a

630
00:34:38.260 --> 00:34:42.060
repintar el lienzo de un color color gris.

631
00:34:42.620 --> 00:34:44.740
Y luego encima volvemos a pintar el círculo,

632
00:34:44.810 --> 00:34:45.900
pero no de la posición,

633
00:34:46.440 --> 00:34:48.540
con lo cual el círculo parece que se está moviendo,

634
00:34:48.540 --> 00:34:51.140
pero realmente lo que está haciendo es que se está invocando

635
00:34:51.400 --> 00:34:55.540
1000 veces más o menos una 60 veces por segundo,

636
00:34:56.080 --> 00:34:57.980
la función draw y

637
00:34:58.840 --> 00:35:02.300
en esa invocación se vuelve a pintar el lienzo y el círculo

638
00:35:02.530 --> 00:35:04.580
aparece desplazado un poquito

639
00:35:05.140 --> 00:35:07.820
y se vuelve a pintar con lo cual se borra el círculo aparece

640
00:35:07.820 --> 00:35:09.660
otra vez desplazado otro poquito.

641
00:35:09.770 --> 00:35:12.860
Pero todo eso lo hace muy, muy rápido y hace que

642
00:35:13.840 --> 00:35:15.980
se produzca ese efecto de animación,

643
00:35:15.980 --> 00:35:19.380
pero realmente hay una repintada de lo que sería el lienzo

644
00:35:19.600 --> 00:35:22.380
de una de una forma tan, tan rápida que ni parpadea.

645
00:35:22.880 --> 00:35:27.220
Muy bien, entonces ya tenemos el definido,

646
00:35:27.360 --> 00:35:31.980
lo que es el secreto de las animaciones en general

647
00:35:32.760 --> 00:35:37.220
en cualquier lenguaje de probación,

648
00:35:37.240 --> 00:35:41.000
cualquier aplicación, cualquier absolutamente

649
00:35:41.510 --> 00:35:44.040
cualquier tecnología de animación.

650
00:35:44.040 --> 00:35:47.920
Lo que haces, eso va cambiando la animación a

651
00:35:49.700 --> 00:35:51.370
múltiples frames por segundo.

652
00:35:52.030 --> 00:35:55.650
De modo que las animaciones son absolutamente fluidas,

653
00:35:56.320 --> 00:36:00.010
pero que pasaría si solo para experimentar un poco,

654
00:36:00.630 --> 00:36:03.850
si el método draw no me cambiase,

655
00:36:04.590 --> 00:36:06.690
no me repintase el lienzo.

656
00:36:07.180 --> 00:36:08.530
Vamos a ver qué es lo que pasa.

657
00:36:09.080 --> 00:36:13.850
Pues fíjate, lo que pasa es que mi círculo al no borrarse

658
00:36:14.070 --> 00:36:16.810
me deja una estela de todos los círculos que se van

659
00:36:17.640 --> 00:36:19.370
mostrando a lo largo del tiempo.

660
00:36:20.720 --> 00:36:22.720
Entonces la animación va cambiando.

661
00:36:23.240 --> 00:36:26.240
Y qué pasaría si yo en vez de la x

662
00:36:27.540 --> 00:36:30.310
utilizase el valor de x también para la i?

663
00:36:31.960 --> 00:36:36.810
Pues ahora el círculo va de una esquina arriba a la esquina

664
00:36:37.350 --> 00:36:41.050
arriba, la la la izquierda abajo a la derecha, con lo cual

665
00:36:41.720 --> 00:36:43.730
este lo que me encanta de esta

666
00:36:45.030 --> 00:36:49.840
aplicación de este framework es que con muy poquito código,

667
00:36:50.180 --> 00:36:51.400
no hemos aprendido casi nada.

668
00:36:51.400 --> 00:36:53.360
Simplemente hemos aprendido lo que es una variable

669
00:36:53.920 --> 00:36:58.880
y ya estamos haciendo animaciones y tú puedes pensar, vale,

670
00:36:58.950 --> 00:37:02.480
pues, y que pasaría si utilizase la x también por

671
00:37:02.480 --> 00:37:04.200
aquí, a ver qué pasaría.

672
00:37:04.470 --> 00:37:08.960
Pues fíjate, el círculo va creciendo. Wow, no.

673
00:37:09.360 --> 00:37:12.360
Entonces es que a mí me parece que es súper chulo,

674
00:37:12.360 --> 00:37:16.280
muy motivante para poder aprender programación con ejemplos

675
00:37:16.700 --> 00:37:21.080
que realmente nos parezcan divertidos y que nos animen.

676
00:37:21.080 --> 00:37:24.280
Lo que me gusta es eso que nos animan a experimentar.

677
00:37:24.860 --> 00:37:27.840
Le voy a poner un ejemplo aquí, eh?

678
00:37:29.230 --> 00:37:31.570
Le vamos a llamar cero uno círculos.

679
00:37:33.810 --> 00:37:36.170
Y por qué me ha gusta usted ejemplo?

680
00:37:36.930 --> 00:37:39.650
Y lo voy a guardar aquí con este nombre,

681
00:37:39.920 --> 00:37:41.210
así ya queda guardado.

682
00:37:41.780 --> 00:37:43.570
Ahora voy a copiar esto de aquí

683
00:37:44.810 --> 00:37:46.210
y voy a hacer un nuevo archivo,

684
00:37:46.440 --> 00:37:49.690
pero voy a partir de este mismo código que ya acaba vos de

685
00:37:49.690 --> 00:37:53.530
ver sólo que voy a dejar otra vez el background pintado.

686
00:37:53.890 --> 00:37:56.850
Y voy a volver a la situación que había antes en la cual

687
00:37:56.850 --> 00:37:58.490
teníamos la i constante

688
00:37:59.490 --> 00:38:02.050
y también lo que es el diámetro del círculo

689
00:38:02.490 --> 00:38:03.610
también constante.

690
00:38:04.480 --> 00:38:08.210
Bien, lo vamos a volver aquí a play para que nos acordemos

691
00:38:08.210 --> 00:38:09.650
de lo que estaba haciendo el círculo.

692
00:38:11.660 --> 00:38:13.700
Y ahora pregunto yo que haríais

693
00:38:14.460 --> 00:38:17.300
y quisieras que el círculo se moviese más rápido?

694
00:38:19.380 --> 00:38:23.540
Pensarlo. Creo que sí que

695
00:38:23.540 --> 00:38:24.660
muchos lo habéis adivinado.

696
00:38:24.970 --> 00:38:27.180
Simplemente si quiero que se mueva más rápido,

697
00:38:27.480 --> 00:38:32.100
lo que tendré que hacer es incrementar la posición

698
00:38:32.760 --> 00:38:36.000
de la x en un valor mayor.

699
00:38:36.400 --> 00:38:37.840
O sea que si yo pongo aquí tres,

700
00:38:38.620 --> 00:38:41.760
lo que voy a hacer es que el círculo se mueva de tres en

701
00:38:41.760 --> 00:38:45.480
tres puntos, aun así el movimiento suficientemente

702
00:38:46.110 --> 00:38:47.960
suavizado como estáis comprobando.

703
00:38:47.990 --> 00:38:50.150
Vale, esto es

704
00:38:50.810 --> 00:38:53.710
un aspecto que podíamos llamarle velocidad.

705
00:38:54.410 --> 00:38:56.670
Oye, por qué no guardamos la velocidad?

706
00:39:02.870 --> 00:39:03.650
Es una variable

707
00:39:08.090 --> 00:39:12.100
así podemos simplemente incrementar

708
00:39:14.130 --> 00:39:17.780
el valor de la x por la velocidad.

709
00:39:17.960 --> 00:39:19.820
El efecto va a ser exactamente el mismo.

710
00:39:20.120 --> 00:39:23.180
Lo que pasa es que eso me va a permitir variar la velocidad.

711
00:39:23.780 --> 00:39:24.980
Y por qué quiero hacer esto?

712
00:39:25.680 --> 00:39:27.620
Voy a hacer otra pregunta que el haber.

713
00:39:27.620 --> 00:39:30.780
Habéis visto vosotros? Oye, no habría manera de

714
00:39:31.480 --> 00:39:34.900
que este círculo, cuando llegue a este punto del final del

715
00:39:34.900 --> 00:39:38.060
lienzo, vuelva para el lado de donde venía.

716
00:39:38.540 --> 00:39:42.300
Y así hacemos un efecto de rebote. Cómo lo haríais eso?

717
00:39:43.220 --> 00:39:47.580
Pensar un momento, si lo muevo para aquí,

718
00:39:47.790 --> 00:39:50.500
aumentando el valor de la x que tendría que hacer,

719
00:39:50.560 --> 00:39:54.930
si quiero que luego se mueva hacia el otro lado,

720
00:39:58.180 --> 00:40:01.310
efectivamente disminuir el valor de la x.

721
00:40:01.900 --> 00:40:04.350
Pero claro, si yo disminuyo

722
00:40:04.930 --> 00:40:07.150
el valor de la x es el principio.

723
00:40:07.730 --> 00:40:11.790
Lo que va a hacer es que al darle play, bueno,

724
00:40:11.790 --> 00:40:13.310
no sé si se llega a ver fijaros aquí,

725
00:40:13.310 --> 00:40:14.350
el círculo va a parecer y se

726
00:40:14.350 --> 00:40:15.430
haga a mover hacia el otro lado.

727
00:40:16.130 --> 00:40:19.270
Lo que pasa es que, claro, casi ni se ve porque se mu muy

728
00:40:19.270 --> 00:40:20.270
rápido hacia el otro lado.

729
00:40:20.970 --> 00:40:23.310
No, esto no es lo que queremos.

730
00:40:23.690 --> 00:40:26.550
Lo que queremos es que se vaya para un lado y luego rebote.

731
00:40:27.270 --> 00:40:30.710
Entonces aquí nos entra un en juego,

732
00:40:31.290 --> 00:40:34.630
un nuevo concepto que son las estructuras de control para

733
00:40:34.630 --> 00:40:39.230
poder hacer los programas y las cosas que tú vas a necesitar

734
00:40:39.230 --> 00:40:40.590
en el día a día de la programación.

735
00:40:40.980 --> 00:40:43.990
Necesitas trabajar con estructuras de control que te

736
00:40:43.990 --> 00:40:48.390
permitan hacer cosas como los condicionales.

737
00:40:48.490 --> 00:40:51.110
Los condicionales es la primera estructura de control que

738
00:40:51.110 --> 00:40:52.470
vamos a conocer, que vamos a ver con

739
00:40:52.470 --> 00:40:53.710
detalle a lo largo del curso.

740
00:40:54.350 --> 00:40:57.150
Y ahora simplemente estoy de una manera muy, muy rápida

741
00:40:57.790 --> 00:41:01.790
introduciendo nos permiten definir cosas que se hagan cuando

742
00:41:02.940 --> 00:41:07.270
dependiendo de una expresión, si una expresión

743
00:41:08.960 --> 00:41:12.190
tiene cierto valor o se cumple

744
00:41:13.110 --> 00:41:16.550
determinada manera, pues tú puedes hacer una cosa y si no se

745
00:41:16.550 --> 00:41:18.150
cumple, pues otra vale,

746
00:41:18.430 --> 00:41:21.620
entonces lo que voy a hacer es un condicional para poder

747
00:41:22.350 --> 00:41:23.500
hacer lo siguiente.

748
00:41:24.120 --> 00:41:26.940
Quiero que cuando el

749
00:41:29.090 --> 00:41:30.850
círculo se vaya para acá,

750
00:41:31.160 --> 00:41:33.130
pues voy a enseñar una cosa también interesante.

751
00:41:33.260 --> 00:41:37.410
Quiero que lo veáis, voy a hacer una función aquí con soe

752
00:41:38.340 --> 00:41:41.690
punto log de la x con

753
00:41:41.690 --> 00:41:44.610
so lo es una función de javascript que sirve para mostrar

754
00:41:44.900 --> 00:41:49.050
datos en la consola y la consola la tenemos aquí en p, j, s,

755
00:41:49.870 --> 00:41:52.690
eh, no hace falta ni que labráis la consola del navegador.

756
00:41:53.050 --> 00:41:57.250
Y simplemente veis que aquí el valor de la x va aumentando.

757
00:41:57.250 --> 00:42:00.130
Va aumentando muy, muy rápido y ahora mismo ya está en

758
00:42:02.890 --> 00:42:06.130
y tal va aumentando muy rápido en pasos de 60 en

759
00:42:06.130 --> 00:42:07.970
60 por cada segundo.

760
00:42:08.680 --> 00:42:11.210
Vale, esto genial.

761
00:42:11.770 --> 00:42:13.690
Entonces ya nos dado una idea,

762
00:42:14.110 --> 00:42:15.650
nos dado una idea, cuál es la idea?

763
00:42:15.960 --> 00:42:20.870
Pues cuando la x llegue al final del lienzo,

764
00:42:20.930 --> 00:42:22.950
el lienzo mide 400 pixe.

765
00:42:23.330 --> 00:42:27.470
Quiero que en vez de empezar a sumar la x,

766
00:42:27.470 --> 00:42:31.590
quiero empezar a arrestar la la el la x, vale,

767
00:42:31.910 --> 00:42:33.710
entonces esto lo voy a expresar de esta manera.

768
00:42:35.680 --> 00:42:39.900
Sí, y esta es la primera estructura

769
00:42:39.900 --> 00:42:41.340
condicional que vamos aprender.

770
00:42:41.800 --> 00:42:45.650
La x es mayor

771
00:42:47.130 --> 00:42:49.480
que 400, o sea,

772
00:42:49.660 --> 00:42:52.840
si hemos llegado hasta el final del lienzo.

773
00:42:56.370 --> 00:42:58.170
Y ahora dentro de unas llaves,

774
00:42:58.720 --> 00:43:03.170
escribo el código que quiero que se ejecute en el caso de

775
00:43:03.170 --> 00:43:05.890
que se cumpla esta expresión.

776
00:43:06.210 --> 00:43:09.010
O sea, está expresión si, si da positivo o sea

777
00:43:09.670 --> 00:43:13.690
qui es mayor que 400, es una pregunta si o no.

778
00:43:14.160 --> 00:43:16.450
Pues, pues depende y va creciendo la

779
00:43:16.610 --> 00:43:17.730
x y llegar al me momento que sí.

780
00:43:17.960 --> 00:43:19.170
Pues en ese me momento

781
00:43:19.870 --> 00:43:22.330
te pasará por el lado positivo del life.

782
00:43:22.890 --> 00:43:25.930
Y lo que haré será que speed

783
00:43:28.870 --> 00:43:31.500
será igual a menos tres.

784
00:43:33.840 --> 00:43:37.560
Fíjate si speed vale menos tres.

785
00:43:38.390 --> 00:43:42.200
Querrá decir que la velocidad que antes valía tres

786
00:43:43.860 --> 00:43:48.110
pasará a vale menos tres, con lo cual si yo sumo menos tres,

787
00:43:48.610 --> 00:43:50.510
lo que ha será arrestar en realidad.

788
00:43:50.950 --> 00:43:53.270
Y empezaré a hacer que el círculo

789
00:43:54.010 --> 00:43:56.070
se mueva en la dirección contraria.

790
00:43:56.750 --> 00:44:00.430
Y ahí tenemos el primer efecto de rebote que

791
00:44:00.430 --> 00:44:01.590
podemos conseguir.

792
00:44:02.150 --> 00:44:05.110
Y ahora alguien me dirá si, pero hemos perdido

793
00:44:06.490 --> 00:44:09.230
el círculo cuando se te ha ido para aquí, Miguel,

794
00:44:10.100 --> 00:44:12.950
como lo recuperamos que rebote para el otro lado, por favor,

795
00:44:13.170 --> 00:44:17.310
si no lo perdemos, pues nada con otro condicional,

796
00:44:18.480 --> 00:44:23.330
solo que aquí el condicional será al contrario, si la x

797
00:44:24.030 --> 00:44:27.250
es menor que cero, o sea,

798
00:44:27.430 --> 00:44:31.600
si hemos llegado a un punto en el que nuestro círculo se nos

799
00:44:31.600 --> 00:44:34.200
salga por la izquierda, entonces

800
00:44:35.660 --> 00:44:38.840
la velocidad volverá a ser el valor de tres.

801
00:44:40.000 --> 00:44:43.840
Y aquí tenemos el efecto de rebote infinito.

802
00:44:44.300 --> 00:44:46.520
Va rebotando de un lado para otro.

803
00:44:47.200 --> 00:44:50.770
Vale, pues ya

804
00:44:51.690 --> 00:44:54.930
tenemos un e jeito de una bola que rebota.

805
00:44:55.450 --> 00:45:00.050
Y lo mismo digo que jugar con esto, jugar con esto,

806
00:45:00.070 --> 00:45:03.170
por qué no utilizáis el valor de la x aquí con

807
00:45:04.400 --> 00:45:05.890
como el tamaño de la bola?

808
00:45:06.870 --> 00:45:09.600
Pues conseguís otro efecto diferente.

809
00:45:11.490 --> 00:45:13.850
Y también podéis probar con el valor de la

810
00:45:14.410 --> 00:45:16.370
x en la i a ver lo que pasa

811
00:45:18.790 --> 00:45:21.550
y el efecto va a ser distinto de nuevo.

812
00:45:22.420 --> 00:45:26.990
Bien, y oye, y si multiplico la x

813
00:45:27.770 --> 00:45:29.890
por dos, qué pasaría?

814
00:45:31.140 --> 00:45:34.290
Bueno, pues la bol agres de muchísimo más.

815
00:45:36.320 --> 00:45:40.440
Y bueno, podéis hacer lo que os apetezca para intentar

816
00:45:40.440 --> 00:45:43.680
buscar la animación que que os guste más.

817
00:45:43.980 --> 00:45:46.710
Ay, chiqui quito el background que va a pasar ahora.

818
00:45:49.470 --> 00:45:53.920
Pues, bueno, bueno, aquí os mira la vuelta. Es muy chula.

819
00:45:54.300 --> 00:45:58.880
Ya hace un efecto de de túnel? No, verdad?

820
00:45:58.890 --> 00:46:00.200
Está chulo. Bueno,

821
00:46:00.310 --> 00:46:02.920
pues lo puedo ir probando y encontráis cosas

822
00:46:03.580 --> 00:46:04.920
que os llame la atención.

823
00:46:05.420 --> 00:46:07.920
De repente encontraréis cosas que digáis,

824
00:46:07.920 --> 00:46:10.560
pero como ha podido ocurrir esto, eh?

825
00:46:12.060 --> 00:46:16.350
Como como, como, y tenéis que poneros a pensar, ah, vale,

826
00:46:17.050 --> 00:46:20.630
sí, si es que tal estoy haciendo este valor y tal y cual,

827
00:46:20.830 --> 00:46:24.470
y bueno, o como puedo hacer otra cosa que

828
00:46:25.300 --> 00:46:27.390
estamos a todo el tiempo utilizando la x,

829
00:46:27.390 --> 00:46:29.510
pero ahí si se me ocurre crear una nueva variable.

830
00:46:29.830 --> 00:46:33.190
Y pues yo creo que esto es un buen

831
00:46:33.960 --> 00:46:36.750
lugar para hacer vuestras

832
00:46:39.520 --> 00:46:44.170
pruebas y andar jugueteando con el lenguaje

833
00:46:44.310 --> 00:46:47.530
ja cript y probando a ver que pasa con cada

834
00:46:47.570 --> 00:46:48.850
cosa que se se ocurra.

835
00:46:49.170 --> 00:46:53.410
Y aquí yo digo que al final la imaginación

836
00:46:53.990 --> 00:46:56.410
va a ser vuestro vuestro límite.

837
00:46:57.090 --> 00:47:01.670
Muy bien, ya tenemos este segundo o tercer ejemplo que le

838
00:47:01.670 --> 00:47:05.760
voy a guardar aquí, pero uno, dos, creo que le

839
00:47:06.310 --> 00:47:07.880
este bueno, sería tres,

840
00:47:09.660 --> 00:47:13.970
que sería bola que rebota.

841
00:47:16.310 --> 00:47:18.080
Bien, pues nada lo guardamos.

842
00:47:19.210 --> 00:47:21.610
Y vamos a hacer otro ejemplo

843
00:47:22.190 --> 00:47:24.490
en el cual voy a trabajar con interactividad.

844
00:47:25.580 --> 00:47:29.500
Voy a hacer aquí un five new y

845
00:47:30.160 --> 00:47:33.580
ya tenemos un primer sketch de nuevo vacío.

846
00:47:35.360 --> 00:47:37.870
Entonces, mmm.

847
00:47:38.320 --> 00:47:41.270
Bueno, ya he trabajado con Circle,

848
00:47:42.010 --> 00:47:43.510
existe muchas otras formas,

849
00:47:43.700 --> 00:47:45.270
pero voy a seguir trabajando con círculo

850
00:47:45.810 --> 00:47:48.310
que me gusta bastante, eh?

851
00:47:49.070 --> 00:47:51.950
Y es bastante simple. Luego tenéis, pues,

852
00:47:53.250 --> 00:47:55.350
dentro de el p j.

853
00:47:55.630 --> 00:47:58.310
S aquí en he la re

854
00:47:59.330 --> 00:48:02.070
que aquí si ponéis shape,

855
00:48:04.070 --> 00:48:07.680
pues os va seguramente a mostrar otra serie de formas.

856
00:48:08.620 --> 00:48:11.480
No vamos a buscar aquí Circle,

857
00:48:15.610 --> 00:48:20.150
no aquí solo si te da el Circle, pero igual hay algún lugar

858
00:48:21.000 --> 00:48:24.070
bueno aquí te da arcos, círculos elipses,

859
00:48:24.330 --> 00:48:26.990
puntos cuadrados rectángulos.

860
00:48:27.810 --> 00:48:31.110
No, perdona quad cuando sería lo no se exactamente a que se

861
00:48:31.110 --> 00:48:33.950
refiere rectángulo squad te triangle.

862
00:48:34.670 --> 00:48:37.070
También puedes hacer formas. Puedes trabajar con color.

863
00:48:37.070 --> 00:48:39.630
Aquí tienes todo lo que es la ayuda y la referencia para

864
00:48:39.630 --> 00:48:42.150
poder trabajar con p j.

865
00:48:42.430 --> 00:48:45.630
S. Y encontráis, por ejemplo, Circle, a ver qué hace esto.

866
00:48:46.020 --> 00:48:48.750
Pues, pues me crea el canvass.

867
00:48:48.820 --> 00:48:50.190
Pues bueno,

868
00:48:50.370 --> 00:48:52.950
tienes aquí e jeitos que tú los puedes

869
00:48:52.950 --> 00:48:54.150
incluso poner en marcha.

870
00:48:54.620 --> 00:48:58.550
Incluso lo podéis aquí, cambiar y le des aquí a play.

871
00:48:58.770 --> 00:49:01.510
Te lo cambia el y te lo muestra el mismo.

872
00:49:02.250 --> 00:49:03.670
El mismo ejemplo, vale.

873
00:49:04.690 --> 00:49:07.330
Y aquí te explica un poco cuáles son los parámetros

874
00:49:07.330 --> 00:49:08.530
que le puedes enviar a círculo.

875
00:49:09.410 --> 00:49:12.410
Y bien, aquí está con todo con bastante detalle.

876
00:49:12.410 --> 00:49:15.770
Lo digo porque queréis investigar por vuestra cuenta allí

877
00:49:15.770 --> 00:49:19.340
tenéis un poco la la, la idea

878
00:49:20.800 --> 00:49:23.180
de las cosas que hay que te permite

879
00:49:23.180 --> 00:49:25.020
así de una manera rápida.

880
00:49:25.570 --> 00:49:28.500
Bien, como digo, voy a ir con cicle

881
00:49:29.610 --> 00:49:32.030
que me vale muy bien para los

882
00:49:32.030 --> 00:49:33.230
ejemplarios que estoy haciendo.

883
00:49:33.850 --> 00:49:36.990
Voy a poner un círculo de momento otra vez en la posición

884
00:49:36.990 --> 00:49:40.870
200 por 200 y 100 y bueno,

885
00:49:41.060 --> 00:49:45.800
como me aburro un poco del del

886
00:49:48.290 --> 00:49:50.950
del color del color gris.

887
00:49:51.340 --> 00:49:53.670
Pues vamos a empezar a cambiar algunos colores.

888
00:49:53.670 --> 00:49:55.190
Cómo podemos cambiar el color del círculo?

889
00:49:55.940 --> 00:49:58.710
Pues, bueno, por ejemplo, podemos utilizar aquí

890
00:49:59.650 --> 00:50:03.630
una función que se llama fil y que nos permite definir lo

891
00:50:03.630 --> 00:50:06.870
que sería el relleno de las formas que dibujamos.

892
00:50:07.670 --> 00:50:11.070
Entonces, pues vamos a hacer un fil con

893
00:50:11.860 --> 00:50:13.350
valores random.

894
00:50:16.090 --> 00:50:20.740
Esto ya la hemos visto que puedo hacer un random entre para,

895
00:50:20.740 --> 00:50:24.300
vamos a poner un random entre 100 y 200.

896
00:50:25.800 --> 00:50:27.360
Y luego voy a poner aquí

897
00:50:31.400 --> 00:50:33.170
80 y 80.

898
00:50:35.490 --> 00:50:36.580
Vale? Pues nada.

899
00:50:36.940 --> 00:50:41.660
Entonces esto dibujará un círculo que cada vez que yo

900
00:50:42.530 --> 00:50:47.460
haga un nuevo lienzo, aparecería con un fil diferente

901
00:50:48.280 --> 00:50:51.780
que pasaría si yo este fil lo llevase

902
00:50:52.580 --> 00:50:54.260
a la función dr.

903
00:50:54.720 --> 00:50:58.620
Lo que pasará es que cada vez que se dibuje el círculo

904
00:50:58.770 --> 00:51:01.780
tendrá un color rojo diferente.

905
00:51:01.830 --> 00:51:04.660
Ahora el parpadeo no está agresivo porque estamos

906
00:51:04.660 --> 00:51:07.060
simplemente haciendo círculos en

907
00:51:08.600 --> 00:51:10.540
en un color rojo bastante próximo.

908
00:51:11.250 --> 00:51:14.740
Vale, yo puedo poner aquí incluso un valor

909
00:51:15.590 --> 00:51:19.020
entre 100 entre 200 y perdona

910
00:51:19.940 --> 00:51:22.650
entre cero y 200.

911
00:51:23.410 --> 00:51:25.770
Y ahora ya es un un

912
00:51:27.970 --> 00:51:32.550
un valor, pues más más agresivo, no de

913
00:51:33.250 --> 00:51:34.630
de parpadeo más cambiante.

914
00:51:34.980 --> 00:51:39.110
Pero bueno, voy a dejar de momento el fil en la parte arriba

915
00:51:39.570 --> 00:51:40.990
que cambie una sola vez.

916
00:51:41.620 --> 00:51:45.980
Muy bien, y ahora lo que quiero es,

917
00:51:47.800 --> 00:51:52.770
ya que tenemos, mmm, círculos,

918
00:51:53.800 --> 00:51:55.900
se me ocurre que podamos hacer una animación

919
00:51:56.880 --> 00:51:59.020
en la cual aparezcan círculos

920
00:51:59.840 --> 00:52:03.140
que cada vez aparezca un círculo en un lugar distinto.

921
00:52:05.800 --> 00:52:09.950
Pues nada, solo podemos conseguir simplemente

922
00:52:12.250 --> 00:52:17.190
haciendo que nuestros círculos aparezcan

923
00:52:17.930 --> 00:52:20.910
dentro de un valor aleatorio

924
00:52:23.140 --> 00:52:23.490
entre

925
00:52:25.390 --> 00:52:28.380
CE y 400.

926
00:52:30.130 --> 00:52:34.530
Y aquí lo mismo, la posición de la i también que sea entre

927
00:52:34.640 --> 00:52:39.460
cero y 400, si le ve a play,

928
00:52:39.880 --> 00:52:43.790
wow, aparecen los círculos ahí, todo muy rápido, no?

929
00:52:45.940 --> 00:52:49.000
Si esto por ejemplo,

930
00:52:50.190 --> 00:52:52.920
para que este animación no sea tan agresiva,

931
00:52:53.270 --> 00:52:57.090
simplemente se me ocurre que podemos eliminar el background.

932
00:52:57.650 --> 00:52:59.730
Y así se pinta el background una única vez.

933
00:53:00.810 --> 00:53:03.600
Bueno, de hecho no se pinta ni una se queda como vacío.

934
00:53:03.840 --> 00:53:05.520
Y aquí aparecen los círculos

935
00:53:06.180 --> 00:53:09.980
de esta manera está chulo, verdad?

936
00:53:10.890 --> 00:53:13.650
Qué podemos hacer?

937
00:53:13.650 --> 00:53:18.400
También podemos hacer que estos círculos aparezcan

938
00:53:20.500 --> 00:53:22.920
con un fil aleatorio.

939
00:53:23.480 --> 00:53:27.120
Y entonces también tenemos otra animación en el cual los

940
00:53:27.120 --> 00:53:31.840
círculos van cambiando y ya con distintos tonalidades de

941
00:53:31.840 --> 00:53:33.660
rojo queda bastante bien.

942
00:53:34.480 --> 00:53:36.380
Oye, pues nada, vamos a

943
00:53:37.540 --> 00:53:39.420
a utilizar esta idea de los círculos,

944
00:53:39.690 --> 00:53:43.620
pero vamos a cambiarla un poco porque ahora mi idea es que

945
00:53:43.680 --> 00:53:46.990
quiero hacer que los círculos aparezcan

946
00:53:47.650 --> 00:53:50.910
en el lugar donde yo pase el ratón.

947
00:53:53.660 --> 00:53:57.870
Vale? Pues en p j, hay

948
00:53:58.490 --> 00:54:00.230
aparte de funciones,

949
00:54:00.350 --> 00:54:04.030
también hay algunas variables que son globales variables

950
00:54:04.030 --> 00:54:06.470
globales que decir que las dispongo de ellas en cualquier

951
00:54:06.470 --> 00:54:09.970
parte que me dan datos que son interesantes.

952
00:54:10.530 --> 00:54:14.620
Y una de ellas es el mou x

953
00:54:15.220 --> 00:54:16.940
y otra es el mouse.

954
00:54:17.940 --> 00:54:20.990
Y estas dos variables

955
00:54:21.690 --> 00:54:24.550
me indican dónde está la posición del ratón

956
00:54:25.740 --> 00:54:27.000
en cada momento.

957
00:54:27.850 --> 00:54:31.340
Si yo le di a play, bueno,

958
00:54:31.550 --> 00:54:36.260
ahora parece aquí como que most, si el ratón no está dentro,

959
00:54:36.260 --> 00:54:37.420
te inizan cero.

960
00:54:38.010 --> 00:54:42.320
Pero ahora fijaros cuando yo paso el ratón se va

961
00:54:43.040 --> 00:54:47.930
haciendo el dibujo de esos círculos de

962
00:54:47.930 --> 00:54:51.190
esta manera ttulo verdad?

963
00:54:52.190 --> 00:54:53.390
Y todo esto lo hemos conseguido.

964
00:54:54.800 --> 00:54:56.710
Bueno, con una línea de código bueno,

965
00:54:56.770 --> 00:55:00.450
con dos porque hemos puesto aquí el fil, de acuerdo?

966
00:55:02.820 --> 00:55:04.870
Quizás nos gusta este parpadeo.

967
00:55:05.270 --> 00:55:06.710
A mí no me gusta ese parpadeo.

968
00:55:06.710 --> 00:55:10.000
Cuando salgo, se queda parpadeando. Cómo puedo hacer eso?

969
00:55:10.920 --> 00:55:14.820
Os voy a enseñar otro otra función

970
00:55:15.440 --> 00:55:20.260
dentro de esas que nos ofrece el framework que me sirve para

971
00:55:20.780 --> 00:55:21.860
invertir el control.

972
00:55:22.060 --> 00:55:24.590
Y en este caso, voy a invertir el,

973
00:55:27.390 --> 00:55:31.250
voy a utilizar una función que p j va

974
00:55:31.770 --> 00:55:34.450
a llamar cuando el ratón se mueva

975
00:55:36.320 --> 00:55:38.280
y esa función es mou

976
00:55:44.740 --> 00:55:44.960
mus.

977
00:55:47.360 --> 00:55:52.080
Entonces yo todo lo que

978
00:55:52.080 --> 00:55:53.760
escriba dentro de mous

979
00:55:54.840 --> 00:55:57.980
se va a ejecutar cuando el ratón se mueva.

980
00:55:58.940 --> 00:56:03.070
Así que lo que voy a hacer es que el fil en vez de ocurrir,

981
00:56:03.370 --> 00:56:07.310
cuando al draw que ocurra, cuando mueva el ratón,

982
00:56:08.170 --> 00:56:10.160
vamos a darle play ahí.

983
00:56:10.820 --> 00:56:13.200
El círculo apareció a un lado.

984
00:56:15.360 --> 00:56:18.290
Al principio hay, no es porque

985
00:56:19.230 --> 00:56:20.930
no se ejecutado ni una sola vez.

986
00:56:20.930 --> 00:56:25.410
El fil y el círculo al dibujarse con el drow

987
00:56:25.950 --> 00:56:29.050
lo ha pintado en la posición cero como cero,

988
00:56:29.750 --> 00:56:33.080
pero sin relleno porque no hemos ejecutado todavía el fil.

989
00:56:33.510 --> 00:56:38.370
Pero ahora si al mover el no

990
00:56:39.150 --> 00:56:43.010
ha funcionado, entonces, eh,

991
00:56:44.270 --> 00:56:47.180
mou mos mou,

992
00:56:52.900 --> 00:56:54.060
a ver si lo he escrito bien,

993
00:57:03.420 --> 00:57:05.670
Vale, se llama mouse move.

994
00:57:06.370 --> 00:57:10.890
Es como en pasado el ratón se movió

995
00:57:11.570 --> 00:57:12.890
y cuando el ratón se movió,

996
00:57:13.350 --> 00:57:16.570
le ejecuta esta función fijos que aquí hay un detalle es que

997
00:57:16.770 --> 00:57:21.530
apareció en en aquí

998
00:57:21.590 --> 00:57:24.810
con un azul, pero el ponerla bien

999
00:57:25.470 --> 00:57:27.050
me aparece en negrita.

1000
00:57:27.650 --> 00:57:30.890
Entonces, porque es algo que reconoce el editor como una

1001
00:57:30.890 --> 00:57:33.890
función del lenguaje, la había escrito mal,

1002
00:57:33.890 --> 00:57:36.130
pero podía haberme dado cuenta con ese detalle.

1003
00:57:36.730 --> 00:57:39.490
Y entonces ahora, cada vez que muevo el ratón,

1004
00:57:40.110 --> 00:57:42.370
se cambia el color del círculo.

1005
00:57:42.480 --> 00:57:44.950
Pero si yo salgo para

1006
00:57:46.450 --> 00:57:50.990
un sketch de p j s, el ratón solo se mueve.

1007
00:57:51.450 --> 00:57:53.750
Si lo muevo por dentro de lo que es el lienzo,

1008
00:57:54.030 --> 00:57:56.910
entonces hay para de ejecutarse el most move

1009
00:57:57.430 --> 00:57:58.630
o si yo para el ratón ahí.

1010
00:57:58.630 --> 00:58:00.070
Pues también se para ejecutar.

1011
00:58:00.580 --> 00:58:04.370
Bien, aquí tenemos un nuevo ejemplo

1012
00:58:05.880 --> 00:58:09.860
de p js super chulo que

1013
00:58:10.860 --> 00:58:14.070
bueno, la verdad llama la atención con lo poco que hemos

1014
00:58:14.160 --> 00:58:17.030
hecho dentro de lo que es el

1015
00:58:18.320 --> 00:58:19.580
el programa,

1016
00:58:19.910 --> 00:58:23.060
hemos aprendido a que podemos dibujar círculos en

1017
00:58:23.060 --> 00:58:24.100
la posición del ratón.

1018
00:58:24.840 --> 00:58:27.040
Y además, también podemos

1019
00:58:27.590 --> 00:58:29.880
dibujar los círculos, eh?

1020
00:58:29.880 --> 00:58:32.520
Bueno, perdón. Y además, cada vez que move el ratón,

1021
00:58:32.520 --> 00:58:36.800
puedo hacer cosas como, por ejemplo, cambiar el el

1022
00:58:38.770 --> 00:58:41.070
el relleno, el color de relleno.

1023
00:58:41.640 --> 00:58:45.950
Ahora veis que el círculo está relle

1024
00:58:46.860 --> 00:58:49.270
como bordeado por una línea.

1025
00:58:50.220 --> 00:58:54.880
Ese color es el color de stroke, el color de la línea,

1026
00:58:55.680 --> 00:58:58.120
y yo puedo definir también el color del stroke.

1027
00:58:59.030 --> 00:59:02.930
Muy bien, eh, lo que pasa es que lo voy a hacer cuando

1028
00:59:04.310 --> 00:59:09.210
el ratón sea a click y así manejamos otro aspecto de

1029
00:59:09.330 --> 00:59:10.800
interact, un

1030
00:59:15.050 --> 00:59:17.970
Most Precio.

1031
00:59:19.710 --> 00:59:23.040
Y esto lo que hace es que se ejecuta cada vez que haga

1032
00:59:23.430 --> 00:59:25.200
compresión el botón del ratón,

1033
00:59:26.010 --> 00:59:27.730
y simplemente voy a llamar a un stroke.

1034
00:59:29.870 --> 00:59:32.870
Y aquí voy a utilizar un random de nuevo,

1035
00:59:35.740 --> 00:59:38.990
pero voy a utilizar un random para todos los tres valores.

1036
00:59:40.110 --> 00:59:43.830
Y además hay otro valor porque esto no lo vamos a ver muy

1037
00:59:43.830 --> 00:59:46.160
bien, a ver si o click.

1038
00:59:46.160 --> 00:59:47.520
Bueno, si. Así que se ve bien,

1039
00:59:49.930 --> 00:59:54.700
pero también podríamos definir el tamaño

1040
00:59:55.320 --> 00:59:58.140
del stroke, de acuerdo, eso se consigue

1041
00:59:58.880 --> 01:00:01.060
con una función que se llama stroke weis.

1042
01:00:01.740 --> 01:00:03.980
Y esa la voy a ejecutar dentro de set et up porque solo la

1043
01:00:04.020 --> 01:00:05.060
quiero ejecutar una vez.

1044
01:00:11.400 --> 01:00:12.920
Y es simplemente ways,

1045
01:00:13.100 --> 01:00:18.080
le indicamos cuál es el tamaño de lo que es la línea de

1046
01:00:20.060 --> 01:00:22.640
del trazado de los bordes del círculo.

1047
01:00:23.340 --> 01:00:25.880
Le voy a decir que lo haga de 20 ples

1048
01:00:29.700 --> 01:00:31.020
y ahora dejaros.

1049
01:00:32.020 --> 01:00:36.170
Bueno, ahí aparece como el stroke de vente pixel es negro,

1050
01:00:36.680 --> 01:00:40.170
pero si pulso lo hace en azul,

1051
01:00:40.560 --> 01:00:42.050
tampoco queda muy bonito.

1052
01:00:42.070 --> 01:00:46.210
El stroke we tan grande vas a cambiarle a cinco simplemente

1053
01:00:46.210 --> 01:00:49.860
para que se vea menos agresivo.

1054
01:00:50.410 --> 01:00:52.710
Pero bueno, podéis hacer pruebas

1055
01:00:54.090 --> 01:00:56.910
de este estilo para ver como que es lo que va pasando.

1056
01:00:58.150 --> 01:01:00.690
Se puede hacer cosas bastante divertidas

1057
01:01:02.020 --> 01:01:05.900
con p j y con muy poquito

1058
01:01:06.490 --> 01:01:07.700
código, como estáis viendo.

1059
01:01:09.360 --> 01:01:13.300
Muy bien, pues de esto se va a tratar con

1060
01:01:13.300 --> 01:01:14.420
ejemplos de este estilo.

1061
01:01:14.870 --> 01:01:19.820
Vamos a ilustrar todo lo que sería este curso en

1062
01:01:19.820 --> 01:01:23.310
la parte práctica, todo lo que son las prácticas.

1063
01:01:23.910 --> 01:01:27.320
Aprenderemos videos, como decía al principio

1064
01:01:27.860 --> 01:01:28.880
con vídeos grabados,

1065
01:01:28.880 --> 01:01:31.280
aprenderemos todos los conceptos de programación

1066
01:01:31.870 --> 01:01:35.360
como variables es estructuras de control y

1067
01:01:36.630 --> 01:01:38.920
haremos o sea funciones.

1068
01:01:39.640 --> 01:01:44.280
Y luego todo, iremos aplicando todos esos conocimientos para

1069
01:01:44.380 --> 01:01:48.920
ir mejorando, eh, lo que son las

1070
01:01:49.740 --> 01:01:54.330
las nuestras habilidades de programación y aplicándolas

1071
01:01:54.910 --> 01:01:56.130
con p j.

1072
01:01:56.370 --> 01:01:57.450
S para hacer cosas.

1073
01:01:58.240 --> 01:02:02.970
Pues realmente chulas, llegando mi idea con este

1074
01:02:04.600 --> 01:02:07.340
con este framework, podemos hacer hasta juegos.

1075
01:02:08.260 --> 01:02:11.220
Entonces, el ejercicio final de este curso,

1076
01:02:11.840 --> 01:02:14.380
mi idea es conseguir hacer incluso

1077
01:02:14.920 --> 01:02:18.640
un pequeño juego de un laberinto en el cual,

1078
01:02:18.640 --> 01:02:21.210
pues tengamos un personaje que se vaya moviendo por un

1079
01:02:21.210 --> 01:02:24.950
laberinto para conseguir encontrar la salida, dale

1080
01:02:25.470 --> 01:02:28.590
y bueno, más o menos, esta es la

1081
01:02:29.140 --> 01:02:33.540
introducción al curso el resto del curso.

1082
01:02:33.540 --> 01:02:36.740
Como veis, tenéis aquí toda la información de

1083
01:02:37.800 --> 01:02:41.740
de lo que son los objetivos, los enfoques

1084
01:02:42.580 --> 01:02:44.700
y el calendario de clases.

1085
01:02:45.090 --> 01:02:47.620
Como decía al principio, cada semana esta semana,

1086
01:02:47.630 --> 01:02:51.420
vamos a librar conceptos así básicos de introducción a la

1087
01:02:51.420 --> 01:02:54.900
programación, plataformas de ejecución de javascript,

1088
01:02:55.890 --> 01:03:00.700
como trabajar con javascript dentro del navegador,

1089
01:03:01.340 --> 01:03:02.780
utilizar un editor como

1090
01:03:03.680 --> 01:03:07.140
visual estudio code con tips para visual estudio code,

1091
01:03:07.140 --> 01:03:10.060
utilizar la plataforma no de js para ejecutarlos

1092
01:03:10.490 --> 01:03:11.780
programas de javascript.

1093
01:03:12.340 --> 01:03:14.940
Y luego empezaremos ya la semana que viene

1094
01:03:15.660 --> 01:03:17.580
a ver conceptos básicos de programación

1095
01:03:18.740 --> 01:03:20.260
básicos, si no tan básicos.

1096
01:03:21.060 --> 01:03:25.180
Y veremos como lo que son variables, tipos de datos,

1097
01:03:25.190 --> 01:03:27.500
operadores, cosas como, por ejemplo,

1098
01:03:27.520 --> 01:03:31.020
dejaba cript como coerción de tipos también los arr en

1099
01:03:31.020 --> 01:03:32.660
javascript ahí.

1100
01:03:32.670 --> 01:03:34.620
Luego, al acabar la semana,

1101
01:03:35.210 --> 01:03:39.260
tendremos un día de práctica en el cual estaremos ahí

1102
01:03:39.260 --> 01:03:41.900
practicando todo lo que hemos aprendido durante la semana.

1103
01:03:42.590 --> 01:03:44.820
Luego trabajaremos con estructuras de control,

1104
01:03:44.820 --> 01:03:48.940
practicaremos y siempre las prácticas iremos incrementando y

1105
01:03:49.100 --> 01:03:52.100
haciendo sketchs nuevos cada vez más divertidos e

1106
01:03:52.100 --> 01:03:53.860
interesantes con p j.

1107
01:03:54.550 --> 01:03:57.500
Luego trabajaremos con funciones objetos.

1108
01:03:58.340 --> 01:04:01.780
Y para finalizar con otras utilidades del lenguaje javas

1109
01:04:01.930 --> 01:04:04.900
para avanzar con temas un poquito más avanzados

1110
01:04:05.760 --> 01:04:07.780
en la práctica final, mi idea es

1111
01:04:08.760 --> 01:04:11.820
ver cómo podemos hacer un juego sencillo,

1112
01:04:12.250 --> 01:04:15.500
pero que nos permita interacción y que podamos hacer cosas

1113
01:04:15.890 --> 01:04:17.380
como, por ejemplo, un juego,

1114
01:04:18.210 --> 01:04:20.900
como decía un juego de un laberinto que nos permite ir

1115
01:04:20.900 --> 01:04:24.780
moviendo un personaje por dentro de un laberinto que haremos

1116
01:04:24.780 --> 01:04:28.140
todo dentro de js con todos los conocimientos del curso.

1117
01:04:28.620 --> 01:04:32.590
Y eso es todo ya si

1118
01:04:33.370 --> 01:04:35.430
no los conocéis, pero lo comento

1119
01:04:35.430 --> 01:04:37.150
rápidamente para quien no los conozca.

1120
01:04:37.610 --> 01:04:39.710
No me creo que con sí que nos conocéis,

1121
01:04:39.710 --> 01:04:42.270
pero lo comento así muy rápido por si alguien se ha perdido

1122
01:04:42.580 --> 01:04:45.470
para poder acceder a todo lo que son los

1123
01:04:45.470 --> 01:04:46.830
contenidos de este curso.

1124
01:04:47.060 --> 01:04:51.150
Pero de también de cualquier otro curso de escu, tenéis

1125
01:04:51.770 --> 01:04:54.270
la posibilidad de suscribirlos dentro de la suscripción.

1126
01:04:54.760 --> 01:04:59.430
Aquí podéis poder acceder a

1127
01:04:59.730 --> 01:05:03.070
no solo lo que sería la

1128
01:05:04.460 --> 01:05:05.670
este curso en concreto,

1129
01:05:05.860 --> 01:05:09.070
sino a cualquiera de los cursos disponibles de la escuela yt

1130
01:05:09.450 --> 01:05:10.670
los planes de estudio,

1131
01:05:11.380 --> 01:05:15.990
incluso los masters que tenemos dentro de

1132
01:05:16.180 --> 01:05:18.960
escuela yt, hay masters que duran,

1133
01:05:19.380 --> 01:05:22.800
son formaciones a largo plazo que que está impartidas

1134
01:05:23.740 --> 01:05:27.000
con el máximo rigor universitario y que las ofre

1135
01:05:27.550 --> 01:05:30.080
luis Fernández, que es un profesor que seguro

1136
01:05:30.080 --> 01:05:31.240
que muchos ya conocéis.

1137
01:05:31.800 --> 01:05:34.600
Y bien todo esto lo podéis acceder a través de la

1138
01:05:34.600 --> 01:05:37.720
suscripción, pero también si queréis poder hacer acceder a

1139
01:05:37.720 --> 01:05:42.440
los cursos comprándolos de manera unitaria y eso simplemente

1140
01:05:42.790 --> 01:05:44.200
podrás acceder al curso porque

1141
01:05:44.200 --> 01:05:45.400
está en tu cuenta para siempre.

1142
01:05:45.500 --> 01:05:47.760
La suscripción no tiene permanencia,

1143
01:05:47.760 --> 01:05:50.760
pero dura el tiempo que tú permanezcas.

1144
01:05:50.760 --> 01:05:53.840
Decidas permanecer con nosotros a aquí en la escuela y te y

1145
01:05:53.840 --> 01:05:55.800
después, pues ya no podrás acceder al contenido.

1146
01:05:56.310 --> 01:05:59.400
Pero una vez que compras el curso de manera unitaria,

1147
01:05:59.420 --> 01:06:01.560
lo compras para siempre y están ahí en tu cuenta.

1148
01:06:01.990 --> 01:06:03.720
Vale? Pues con esto ya termino.

1149
01:06:04.920 --> 01:06:09.860
Si tenéis cualquier pregunta sobre el curso, me podéis dejar

1150
01:06:11.650 --> 01:06:16.370
los mensajes, la sección de preguntas del curso,

1151
01:06:16.370 --> 01:06:20.770
ya veo que ahí en el chat, tengo aquí varios mensajes de

1152
01:06:23.310 --> 01:06:27.370
agradecimientos y y nada

1153
01:06:27.390 --> 01:06:29.850
Si, déjame un para pregunta que tenemos

1154
01:06:29.850 --> 01:06:30.970
Miguel, si me permites,

1155
01:06:31.310 --> 01:06:33.170
Ah, así Vale, voy con ellas.

1156
01:06:33.710 --> 01:06:37.170
Nos dicen a principio de la sesión, soy promot PHP.

1157
01:06:37.170 --> 01:06:38.970
Y cuando tengo que tocar javascript,

1158
01:06:39.750 --> 01:06:42.490
hay cosas que me cuestan aun teniendo algo

1159
01:06:42.490 --> 01:06:43.530
de experiencia programando.

1160
01:06:43.530 --> 01:06:46.850
Quiero entender javascript más allá de leer el valor de un

1161
01:06:46.900 --> 01:06:49.690
input o un o inyectar h chml.

1162
01:06:49.800 --> 01:06:50.930
Este curso me servirá,

1163
01:06:52.400 --> 01:06:55.930
Vale, yo creo que para aprender, ja scribe,

1164
01:06:55.930 --> 01:06:57.490
este curso te te va a venir bien.

1165
01:06:57.490 --> 01:07:01.070
Pero si, ya sabes, programación igual es un poco,

1166
01:07:02.450 --> 01:07:04.630
se se va a quedar un poco básico para ti.

1167
01:07:05.310 --> 01:07:09.030
Entonces te recomendaría otros cursos de java scrip de

1168
01:07:09.030 --> 01:07:10.350
acuerdo para ti,

1169
01:07:14.220 --> 01:07:17.950
para ti, te recomendaría o bien el máster

1170
01:07:18.590 --> 01:07:21.530
con el máster, el máster de square yt,

1171
01:07:21.830 --> 01:07:24.810
vas a ver javascript y lo vas a ver con todo lujo de

1172
01:07:24.810 --> 01:07:28.490
detalles porque se utiliza javascript para todo lo que es el

1173
01:07:28.490 --> 01:07:30.610
inicio de la programación.

1174
01:07:32.060 --> 01:07:33.470
Pero si no,

1175
01:07:33.890 --> 01:07:36.950
si lo que quieres es trabajar dentro del navegador,

1176
01:07:37.010 --> 01:07:39.830
te recomiendo un curso de javascript que

1177
01:07:40.410 --> 01:07:42.350
no tiene demasiado tiempo.

1178
01:07:45.220 --> 01:07:47.700
Y a ver no,

1179
01:07:47.720 --> 01:07:50.640
si encontrando me lo de haber pasado.

1180
01:07:51.020 --> 01:07:53.200
Ah, no hasta aquí. Curso de javascript práctico

1181
01:07:53.200 --> 01:07:54.240
para el desarrollo web.

1182
01:07:54.390 --> 01:07:57.840
Este curso explica todo lo que es javascript dentro de lo

1183
01:07:57.840 --> 01:08:00.520
que es el contexto del desarrollo para una página web.

1184
01:08:00.910 --> 01:08:05.560
Este te vendrá muy bien, pero quizás quizás a ver, perdóname

1185
01:08:06.560 --> 01:08:08.550
front a scrip.

1186
01:08:08.820 --> 01:08:11.670
Quizás todavía te venga bien

1187
01:08:12.210 --> 01:08:14.630
el javascript avanzado para ti.

1188
01:08:15.540 --> 01:08:20.230
Bien, este javascript avanzado, creo que

1189
01:08:21.050 --> 01:08:24.110
que es, si, ya sabes, probar

1190
01:08:24.770 --> 01:08:29.270
te te puede dar un y ya has hecho tus pequeñas avances con

1191
01:08:29.270 --> 01:08:33.550
javascript, te va a dar un conocimiento bastante

1192
01:08:34.140 --> 01:08:38.190
más profundo del lenguaje y no te perderás.

1193
01:08:39.310 --> 01:08:42.590
Entonces sería, sería mis recomendaciones?

1194
01:08:45.410 --> 01:08:46.700
Vale, voy con los siguiente.

1195
01:08:47.040 --> 01:08:50.820
Hay alguna diferencia entre el ja entre javascript puro y el

1196
01:08:50.840 --> 01:08:53.300
que usaríamos en un FR javascript?

1197
01:08:53.850 --> 01:08:56.900
Caso que si que existe alguna diferencia que javascript

1198
01:08:56.900 --> 01:08:58.660
vamos a aprender en este curso

1199
01:09:00.630 --> 01:09:04.210
En este curso, vamos a aprender todo lo que son las clases

1200
01:09:04.240 --> 01:09:05.930
teóricas javascript puro,

1201
01:09:06.410 --> 01:09:10.410
o sea todo lo que es el lenguaje en sí y es y el lenguaje en

1202
01:09:10.410 --> 01:09:13.530
sí te vale luego para cualquier marco de trabajo

1203
01:09:14.360 --> 01:09:19.020
que quiero decir que luego cuando tú aprendas javascript,

1204
01:09:19.050 --> 01:09:24.020
pues vas a poder utilizar el lenguaje tanto el javascript

1205
01:09:24.570 --> 01:09:27.940
para el navegador como en javascript para no de j,

1206
01:09:28.420 --> 01:09:33.260
o sea el javascript fuera del navegador como plataforma de

1207
01:09:33.390 --> 01:09:36.500
baken, como para cuando utilizas un framework,

1208
01:09:36.850 --> 01:09:40.300
imagino que te refieres del estilo de angular yak view,

1209
01:09:40.850 --> 01:09:42.740
incluso web components con lit.

1210
01:09:43.380 --> 01:09:44.860
Entonces, todo lo que vas aprender aquí,

1211
01:09:45.320 --> 01:09:48.180
te vas a poder aplicarlo a cualquier contexto

1212
01:09:48.180 --> 01:09:49.220
de uso de javascript.

1213
01:09:49.650 --> 01:09:53.500
Pero este es un curso básico para

1214
01:09:54.980 --> 01:09:58.940
aprender cosas que tienen que ver con frameworks.

1215
01:09:59.480 --> 01:10:02.620
No te recomiendo este curso, sino ya te recomiendo que vayas

1216
01:10:03.300 --> 01:10:07.180
a los cursos en concreto de los frameworks en escuela.

1217
01:10:07.220 --> 01:10:10.020
Y te tenemos un amplio abanico de framework.

1218
01:10:10.200 --> 01:10:14.300
Son todos más populares desde angular view, react, poli

1219
01:10:15.620 --> 01:10:18.580
angular, y luego librerías como alpin,

1220
01:10:19.330 --> 01:10:22.620
como ja query, que también te pueden ofrecer

1221
01:10:23.280 --> 01:10:25.060
nuevas nuevas utilidades

1222
01:10:25.940 --> 01:10:27.740
o utilidades complementarias en tus

1223
01:10:27.780 --> 01:10:28.940
conocimientos de javascript.

1224
01:10:28.940 --> 01:10:31.260
Pero lo que vas a dar este curso te vale para cualquier

1225
01:10:31.620 --> 01:10:33.460
contexto donde utis javascript,

1226
01:10:39.460 --> 01:10:40.460
Vale, queda claro. Pero

1227
01:10:40.460 --> 01:10:43.790
una pregunta, podríamos

1228
01:10:44.960 --> 01:10:47.340
ir directamente al framework sin saber antes

1229
01:10:47.590 --> 01:10:48.660
javascript puro?

1230
01:10:50.000 --> 01:10:54.840
Muy buena pregunta. En realidad, si tú tienes

1231
01:10:55.500 --> 01:10:58.440
un conocimiento sólido de la programación,

1232
01:10:59.440 --> 01:11:01.840
probablemente te a y un conocimiento

1233
01:11:02.680 --> 01:11:04.720
medianamente básico de javascript,

1234
01:11:05.400 --> 01:11:07.080
probablemente te puedas aclarar.

1235
01:11:07.500 --> 01:11:10.440
Lo que pasa es que la experiencia para ti no va a ser

1236
01:11:10.580 --> 01:11:11.640
tan agradable.

1237
01:11:12.290 --> 01:11:15.400
Cómo podría hacerlo? En qué sentido?

1238
01:11:15.400 --> 01:11:17.600
Pues, que vas a tener lagunas y

1239
01:11:18.740 --> 01:11:21.440
las cosas de repente va a empezar a pasar cosas que a lo

1240
01:11:21.440 --> 01:11:24.440
mejor te resulten poco intuitivas.

1241
01:11:24.860 --> 01:11:27.600
Ja, escribes un lenguaje muy particular, de acuerdo?

1242
01:11:28.320 --> 01:11:30.360
Entonces, si tienes un nivel

1243
01:11:30.900 --> 01:11:34.040
ya de experiencia fuerte con los lenguajes de programación,

1244
01:11:34.630 --> 01:11:37.240
volvería a recomendarte el

1245
01:11:38.130 --> 01:11:43.120
curso de javascript avanzado en ese curso, se tocan temas

1246
01:11:43.780 --> 01:11:48.160
de estos que te van a rellenar las lagunas de javascript,

1247
01:11:48.800 --> 01:11:51.240
probablemente este curso con este nivel de curso,

1248
01:11:51.540 --> 01:11:54.720
tu consigas si tienes una buena experiencia con

1249
01:11:54.720 --> 01:11:57.600
programación, si nunca has tocado javascript

1250
01:11:58.180 --> 01:12:02.760
en el contexto del navegador, también te interesaría el

1251
01:12:03.290 --> 01:12:05.720
curso de javascript para el desarrollo web

1252
01:12:07.020 --> 01:12:09.520
que antes hemos visto por ahí en

1253
01:12:10.660 --> 01:12:12.520
lo mostré hace un poquito, verdad?

1254
01:12:13.280 --> 01:12:17.440
Y incluso este de aquí, incluso práctico

1255
01:12:17.970 --> 01:12:20.240
javascript al desarrollo web,

1256
01:12:20.550 --> 01:12:22.960
este se centra en como manipular la página

1257
01:12:23.560 --> 01:12:25.360
y hacer todo tipo de

1258
01:12:25.890 --> 01:12:28.560
dinamismos y controles de la página utilizando

1259
01:12:28.560 --> 01:12:29.920
javascript al navegador.

1260
01:12:30.640 --> 01:12:33.720
Entonces este tipo de cursos te van a rellenar huecos

1261
01:12:34.430 --> 01:12:38.760
para que tu experiencia a la hora de aprender

1262
01:12:39.250 --> 01:12:43.280
frameworks sea más más adecuada.

1263
01:12:44.120 --> 01:12:47.000
Entonces, si tú eres de los que se aventura y tal,

1264
01:12:47.470 --> 01:12:50.440
pues bueno, con la suscripción de javascript,

1265
01:12:50.440 --> 01:12:52.560
puedes empezar a hacer, por ejemplo, ah,

1266
01:12:52.580 --> 01:12:54.040
que me interesa el FR ri.

1267
01:12:54.470 --> 01:12:56.840
Pues bueno, pues métete en el curso de Riad.

1268
01:12:56.840 --> 01:13:00.360
No te cuesta nada. Si te ves un par de clases y te empiezas

1269
01:13:00.360 --> 01:13:01.960
a perder que probablemente te pase.

1270
01:13:01.960 --> 01:13:04.560
Pues oye, vuelve y

1271
01:13:05.070 --> 01:13:08.800
procura el curso de javascript avanzado y dices no,

1272
01:13:08.800 --> 01:13:10.160
Miguel es que también me pierdo.

1273
01:13:10.430 --> 01:13:12.600
Pues entonces es un poco

1274
01:13:13.320 --> 01:13:16.400
haciendo el recorrido contrario que recomendaría si empiezas

1275
01:13:16.400 --> 01:13:18.160
desde cero, si empiezas desde cero,

1276
01:13:18.160 --> 01:13:20.640
te diría empieza con este curso y

1277
01:13:21.250 --> 01:13:24.690
luego te vas al de desarrollo práctico para desarrollo web

1278
01:13:24.940 --> 01:13:26.650
luego al javascript avanzado.

1279
01:13:26.770 --> 01:13:30.250
Y ahí ya estás con las pilas puestas para poder aprender

1280
01:13:30.250 --> 01:13:32.010
cualquier framework que va a ser

1281
01:13:33.920 --> 01:13:35.890
perfectamente asumible para ti.

1282
01:13:36.700 --> 01:13:39.160
De acuerdo? Y luego hay otros cursos complementarios que

1283
01:13:39.160 --> 01:13:43.800
también recomendaría dentro de javascript que que,

1284
01:13:44.300 --> 01:13:46.600
por ejemplo, y que son muy, muy interesantes,

1285
01:13:47.070 --> 01:13:50.840
como por ejemplo, el curso de bit, que te da un control

1286
01:13:51.380 --> 01:13:54.400
del tooling de todo lo que necesitas para poder trabajar,

1287
01:13:54.430 --> 01:13:57.680
pero no al que yo quería recomendaros era el de

1288
01:13:57.680 --> 01:13:59.480
javascript a síncrono.

1289
01:13:59.980 --> 01:14:02.920
Ese javascript síncrono te ofrece

1290
01:14:04.770 --> 01:14:07.190
un punto muy interesante de

1291
01:14:08.060 --> 01:14:10.830
aprendizaje de javascript de toda la parte a

1292
01:14:11.460 --> 01:14:15.880
que esto es un detalle que realmente es uno de los

1293
01:14:17.340 --> 01:14:21.280
de los de los handicap o de los problemas que tienen los

1294
01:14:21.280 --> 01:14:25.160
programadores para aprender javascript cuando vienen de un

1295
01:14:25.280 --> 01:14:29.360
lenguaje como PHP es la sincronía del lenguaje javascript.

1296
01:14:29.420 --> 01:14:33.400
No es un lenguaje como PHP secuencial en que cada línea de

1297
01:14:33.400 --> 01:14:35.480
código se va ejecutando en orden,

1298
01:14:35.480 --> 01:14:36.720
el que tú las has definido.

1299
01:14:37.670 --> 01:14:40.040
Esto lo veremos en este curso, pero de una manera muy, muy

1300
01:14:40.870 --> 01:14:44.280
introductoria, puede ocurrir con javascript que tú,

1301
01:14:44.300 --> 01:14:48.040
eje escribes líneas de código arriba y que se ejecuten más

1302
01:14:48.040 --> 01:14:49.400
tarde de las que has escrito abajo.

1303
01:14:49.710 --> 01:14:53.760
Como puede ocurrir, eso es que es un lenguaje que

1304
01:14:54.540 --> 01:14:59.400
no respeta la secuencia vida exacta de la escritura de

1305
01:14:59.400 --> 01:15:00.480
las líneas de código.

1306
01:15:01.120 --> 01:15:04.040
Y hay muchos procesos en javascript que son a síncronos,

1307
01:15:04.040 --> 01:15:07.840
como que, pues, por ejemplo, consultar un API que

1308
01:15:09.680 --> 01:15:14.200
directamente para obtener datos j son que tú luego muestres

1309
01:15:14.200 --> 01:15:15.280
dentro de la página.

1310
01:15:16.110 --> 01:15:20.360
Como que, pues, por ejemplo, hacer el

1311
01:15:23.150 --> 01:15:25.740
hacer animaciones, esto también tiene,

1312
01:15:28.000 --> 01:15:30.460
tienes que trabajar con la parte as asíncrona

1313
01:15:31.340 --> 01:15:34.060
y con muchos otros procesos que en el lenguaje

1314
01:15:34.640 --> 01:15:36.300
se utilizan de manera síncrona.

1315
01:15:36.300 --> 01:15:40.100
Cuando, por ejemplo, utilizas no de js para consultar bases

1316
01:15:40.100 --> 01:15:42.900
de datos también el acceso a las bases de datos

1317
01:15:42.960 --> 01:15:43.980
es as asíncrono.

1318
01:15:44.680 --> 01:15:49.340
Eso hace que el lenguaje tenga unas características que lo

1319
01:15:49.340 --> 01:15:54.070
hace muy muy rápido en en determinados

1320
01:15:54.610 --> 01:15:59.470
en determinados contextos de procesadores

1321
01:16:00.450 --> 01:16:01.790
de un solo hilo.

1322
01:16:02.590 --> 01:16:05.350
Y bueno, son cosas un poco avanzadas que no quería yo

1323
01:16:05.550 --> 01:16:08.430
introducir, pero que como veis, el

1324
01:16:09.450 --> 01:16:13.190
dentro del ecosistema y del panorama de javascript en

1325
01:16:13.190 --> 01:16:15.710
escuela yt, hay muchos cursos.

1326
01:16:15.970 --> 01:16:18.190
Os recomiendo o recomiendo, ya que estoy

1327
01:16:18.830 --> 01:16:21.070
hablando de de secuencias de cursos

1328
01:16:21.730 --> 01:16:24.950
dentro de la parte de frontin mirar el

1329
01:16:25.680 --> 01:16:27.110
curso bien de iniciación de front.

1330
01:16:27.210 --> 01:16:30.030
Si busquéis más iniciación a todo lo que sería la

1331
01:16:30.030 --> 01:16:32.710
programación del lado del navegador, empezando por htl

1332
01:16:33.430 --> 01:16:35.790
y luego meterse en el mundo de javascript.

1333
01:16:36.180 --> 01:16:40.430
Pero si os interesa el mundo de javascript,

1334
01:16:40.490 --> 01:16:43.910
en concreto el plan de estudios de

1335
01:16:45.010 --> 01:16:46.190
Expert on javascript,

1336
01:16:46.330 --> 01:16:48.710
lo que pasa es que estoy viendo que este curso de experto en

1337
01:16:48.710 --> 01:16:50.390
javascript empieza por el curso avanzado.

1338
01:16:50.650 --> 01:16:52.670
Es un plan de estudios pensado para quienes

1339
01:16:52.690 --> 01:16:53.910
ya se pan javascript.

1340
01:16:54.830 --> 01:16:58.910
Entonces, si estáis iniciación a la programación,

1341
01:16:59.190 --> 01:17:04.090
recomendaría que que antes de hacer este plan de

1342
01:17:04.090 --> 01:17:07.410
estudios, y si ese es el de iniciativa, afronte de acuerdo

1343
01:17:10.190 --> 01:17:14.430
que empiezas por htmls y luego el que vamos a hacer ahora,

1344
01:17:14.810 --> 01:17:17.830
que es el curso de iniciación a javascript que está un poco

1345
01:17:18.620 --> 01:17:21.470
para en actualizar,

1346
01:17:21.540 --> 01:17:24.830
instituir a otros cursos de iniciación a javascript que

1347
01:17:25.020 --> 01:17:27.350
teníamos en en

1348
01:17:28.130 --> 01:17:31.190
en escuela ya grabados hace tiempo y que vamos a renovar en

1349
01:17:31.190 --> 01:17:33.590
esta ocasión con un enfoque que ya

1350
01:17:33.590 --> 01:17:34.710
ha comentado al principio.

1351
01:17:36.460 --> 01:17:38.270
Vale, hay una última, si me permites,

1352
01:17:39.100 --> 01:17:42.590
dice qué editor de código usas o recomiendas usar para

1353
01:17:42.620 --> 01:17:43.910
desarrollar con javascript?

1354
01:17:45.400 --> 01:17:49.830
Bueno, en este curso, vamos a usar visual estudio code

1355
01:17:50.530 --> 01:17:52.310
que todo el mundo lo conoce.

1356
01:17:56.090 --> 01:17:58.770
Entonces, ya pues es este

1357
01:17:59.870 --> 01:18:02.930
es este el editor que vamos a utilizar, de acuerdo, entonces

1358
01:18:03.970 --> 01:18:08.130
directamente os os recomiendo este,

1359
01:18:09.680 --> 01:18:12.010
este editor que viene

1360
01:18:13.070 --> 01:18:16.450
que es gratuito y viene muy preparado justamente para

1361
01:18:16.450 --> 01:18:18.770
utilizar ja cript viene con todo lo que necesitas.

1362
01:18:19.260 --> 01:18:23.530
Luego también recomendaré durante el curso extensiones

1363
01:18:24.670 --> 01:18:29.250
que son muy, muy indicadas.

1364
01:18:29.270 --> 01:18:31.730
Si estás o piensas trabajar con javascript.

1365
01:18:32.850 --> 01:18:37.690
Y también este es el mismo editor que utilizamos para

1366
01:18:38.280 --> 01:18:41.690
para otros lenguajes de la web, como por ejemplo PHP.

1367
01:18:42.280 --> 01:18:44.690
Así que otros cursos de escuela también se ve este editor,

1368
01:18:45.030 --> 01:18:49.770
eh, ya luego estoy viendo aquí el este

1369
01:18:49.770 --> 01:18:53.810
editor que viene como vitaminado para IA y

1370
01:18:54.480 --> 01:18:57.250
hace poco hace poco en escuela.

1371
01:18:57.330 --> 01:19:01.770
Y uno de los últimos cursos que hemos hecho es el curso

1372
01:19:02.390 --> 01:19:06.250
de desarrollo a pi en

1373
01:19:06.440 --> 01:19:07.930
pyon en este curso.

1374
01:19:07.930 --> 01:19:12.810
Además, vimos, usamos otro otro editor que hablando de

1375
01:19:12.810 --> 01:19:17.470
ella y de

1376
01:19:17.780 --> 01:19:19.990
vale, justamente lo escrito mal, pero

1377
01:19:20.920 --> 01:19:23.620
es este de aquí cursor que es también otro editor que

1378
01:19:23.620 --> 01:19:28.120
también está bastante interesante porque te viene con

1379
01:19:29.540 --> 01:19:32.120
funcionalidades de inteligencia artificial para poder

1380
01:19:34.980 --> 01:19:39.450
hacer cosas para los que ya sabés, eh, probación

1381
01:19:41.300 --> 01:19:43.890
aquí hay que comentarlo alguna cosa que también quiero

1382
01:19:44.060 --> 01:19:48.010
decir, la idea está muy bien para para

1383
01:19:49.430 --> 01:19:52.270
para ayudarnos a

1384
01:19:54.720 --> 01:19:56.170
optimizar nuestros tiempos.

1385
01:19:57.170 --> 01:20:01.900
Pero si tú piensas que vas a poder programar todo

1386
01:20:02.480 --> 01:20:03.620
sin saber programación,

1387
01:20:05.320 --> 01:20:09.600
no te lo recomendaría porque entonces estás dejando al

1388
01:20:10.640 --> 01:20:12.720
a la ía que haga tu trabajo.

1389
01:20:13.760 --> 01:20:14.760
Y bueno,

1390
01:20:14.870 --> 01:20:17.960
pues no vas a controlar nunca lo que es el producto que tú

1391
01:20:17.960 --> 01:20:18.960
estás desarrollando.

1392
01:20:19.840 --> 01:20:21.520
Entonces, al día de hoy,

1393
01:20:22.260 --> 01:20:26.400
es verdad que las herramientas de ía te permite hacer muchas

1394
01:20:26.400 --> 01:20:29.800
cosas de una manera optimizada en el tiempo.

1395
01:20:30.790 --> 01:20:34.700
Pero si no sabes programar, aunque sea un poquito,

1396
01:20:35.080 --> 01:20:36.940
lo que vamos aprender en este código,

1397
01:20:37.210 --> 01:20:40.580
pues tú directamente vas a ser una analfabeto,

1398
01:20:41.160 --> 01:20:45.220
es como el que no sabe leer y escribir.

1399
01:20:46.180 --> 01:20:48.740
Entonces este curso,

1400
01:20:48.840 --> 01:20:52.060
cursos como este te van a solucionar

1401
01:20:52.840 --> 01:20:55.380
la vida en el sentido que te van a dejar.

1402
01:20:55.380 --> 01:20:59.660
Vas a dejar de ser al alfabeto para poder empezar a

1403
01:21:00.420 --> 01:21:01.980
a entender lo que estás escribiendo,

1404
01:21:01.980 --> 01:21:03.860
aunque tú le pidas a ahí que te haga cosas

1405
01:21:04.820 --> 01:21:07.140
y luego los máster de escuela.

1406
01:21:07.260 --> 01:21:11.580
Y lo que te dan es el punto ya de ingeniería del software

1407
01:21:12.160 --> 01:21:14.860
que vas a poder utilizar para poder,

1408
01:21:16.690 --> 01:21:20.180
digamos, ser un ingeniero y no

1409
01:21:20.730 --> 01:21:24.100
contentarte con la primera solución que te de una IA,

1410
01:21:24.330 --> 01:21:26.820
sino ser capaz de estructurar el código y llegar a

1411
01:21:26.820 --> 01:21:31.090
soluciones óptimas para poder ser capaz de desarrollar,

1412
01:21:31.090 --> 01:21:32.610
aunque sea guiado por la IA,

1413
01:21:33.130 --> 01:21:37.010
aplicaciones de todo tipo sin que esto acabe siendo un caos,

1414
01:21:37.640 --> 01:21:41.210
vale, todo esto es algo que

1415
01:21:42.510 --> 01:21:45.210
que es interesante al día de hoy,

1416
01:21:45.230 --> 01:21:49.870
que lo aprendáis para no ser un alfabeto.

1417
01:21:50.070 --> 01:21:54.010
Y luego para poder escribir código con

1418
01:21:54.550 --> 01:21:58.560
con suficiente soltura,

1419
01:21:58.790 --> 01:22:03.520
fluidez y capacidad de de modularización estructuración,

1420
01:22:04.180 --> 01:22:05.520
lo que va a redundar es un

1421
01:22:06.100 --> 01:22:09.270
un fácil mantenimiento de vuestros programas, vale?

1422
01:22:09.550 --> 01:22:14.460
O sea que todo esto lo voy aprender en escuela y te ellos

1423
01:22:14.460 --> 01:22:16.900
lo recomiendo para cualquier pregunta,

1424
01:22:16.900 --> 01:22:21.340
un poco de cuáles son los ciclos de aprendizaje.

1425
01:22:21.340 --> 01:22:24.260
Me podéis consultar a de todo el curso

1426
01:22:24.900 --> 01:22:28.020
o podéis dejarnos un mensaje en en escuela?

1427
01:22:28.130 --> 01:22:30.980
Podemos ayudar a encontrar el curso que más

1428
01:22:30.980 --> 01:22:32.300
adapté a vuestras necesidades.

1429
01:22:33.850 --> 01:22:36.470
Genial, pues hasta aquí las preguntas, de acuerdo?

1430
01:22:36.500 --> 01:22:38.230
Pues nada, muchísimas gracias por vuestro tiempo.

1431
01:22:38.250 --> 01:22:40.990
Nos vemos aquí en escuela para nuevos

1432
01:22:43.120 --> 01:22:45.020
cursos y no las clases de este curso.

1433
01:22:45.240 --> 01:22:47.100
De acuerdo, un abrazo para todos. Hasta luego.
